; generated by ARM C/C++ Compiler, RVCT4.0 [Build 728]
; commandline ArmCC [--debug -c --asm --interleave -o..\OBJ\tft.o --depend=..\OBJ\tft.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\CM3\CoreSupport -I..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I..\..\USER\INC -IC:\Keil\ARM\INC -IC:\Keil\ARM\INC\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=..\OBJ\tft.crf ..\..\USER\SRC\TFT.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  LCD_WR_DATA PROC
;;;36     
;;;37     void LCD_WR_DATA(u16 inputdata)
000000  2101              MOVS     r1,#1
;;;38     {
;;;39     
;;;40     	LCD_RS=1;
000002  4aff              LDR      r2,|L1.1024|
000004  6011              STR      r1,[r2,#0]
;;;41     	LCD_RD=1;
000006  4aff              LDR      r2,|L1.1028|
000008  f8c21198          STR      r1,[r2,#0x198]
;;;42     	LCD_WR=0;
00000c  f04f0100          MOV      r1,#0
000010  f8c2119c          STR      r1,[r2,#0x19c]
;;;43     	GPIOB->ODR=(GPIOB->ODR|0Xff00)&(inputdata);
000014  49fc              LDR      r1,|L1.1032|
000016  6809              LDR      r1,[r1,#0]
000018  f441417f          ORR      r1,r1,#0xff00
00001c  ea010100          AND      r1,r1,r0
000020  4af9              LDR      r2,|L1.1032|
000022  6011              STR      r1,[r2,#0]
;;;44     	LCD_WR=1;  
000024  f04f0101          MOV      r1,#1
000028  4af8              LDR      r2,|L1.1036|
00002a  6011              STR      r1,[r2,#0]
;;;45     	LCD_WR=0;
00002c  f04f0100          MOV      r1,#0
000030  4af4              LDR      r2,|L1.1028|
000032  f8c2119c          STR      r1,[r2,#0x19c]
;;;46     	GPIOB->ODR=(GPIOB->ODR|0Xff00)& (inputdata<<8);
000036  49f4              LDR      r1,|L1.1032|
000038  6809              LDR      r1,[r1,#0]
00003a  f441417f          ORR      r1,r1,#0xff00
00003e  ea012100          AND      r1,r1,r0,LSL #8
000042  4af1              LDR      r2,|L1.1032|
000044  6011              STR      r1,[r2,#0]
;;;47     	LCD_WR=1;		
000046  f04f0101          MOV      r1,#1
00004a  4aee              LDR      r2,|L1.1028|
00004c  f8c2119c          STR      r1,[r2,#0x19c]
;;;48     
;;;49     } 
000050  4770              BX       lr
;;;50     //写寄存器函数
                          ENDP

                  LCD_WR_REG PROC
;;;51     void LCD_WR_REG(u16 data)
000052  2100              MOVS     r1,#0
;;;52     { 
;;;53     	LCD_RS=0;//写地址
000054  4aea              LDR      r2,|L1.1024|
000056  6011              STR      r1,[r2,#0]
;;;54     	LCD_RD=1;  
000058  f04f0101          MOV      r1,#1
00005c  4ae9              LDR      r2,|L1.1028|
00005e  f8c21198          STR      r1,[r2,#0x198]
;;;55     
;;;56     	LCD_WR=0;
000062  f04f0100          MOV      r1,#0
000066  f8c2119c          STR      r1,[r2,#0x19c]
;;;57     	GPIOB->ODR=(GPIOB->ODR|0Xff00)& (data);  
00006a  49e7              LDR      r1,|L1.1032|
00006c  6809              LDR      r1,[r1,#0]
00006e  f441417f          ORR      r1,r1,#0xff00
000072  ea010100          AND      r1,r1,r0
000076  4ae4              LDR      r2,|L1.1032|
000078  6011              STR      r1,[r2,#0]
;;;58     	LCD_WR=1;  
00007a  f04f0101          MOV      r1,#1
00007e  4ae3              LDR      r2,|L1.1036|
000080  6011              STR      r1,[r2,#0]
;;;59     	LCD_WR=0; 
000082  f04f0100          MOV      r1,#0
000086  4adf              LDR      r2,|L1.1028|
000088  f8c2119c          STR      r1,[r2,#0x19c]
;;;60     	GPIOB->ODR=(GPIOB->ODR|0Xff00)&(data)<<8;
00008c  49de              LDR      r1,|L1.1032|
00008e  6809              LDR      r1,[r1,#0]
000090  f441417f          ORR      r1,r1,#0xff00
000094  ea012100          AND      r1,r1,r0,LSL #8
000098  4adb              LDR      r2,|L1.1032|
00009a  6011              STR      r1,[r2,#0]
;;;61     	LCD_WR=1; 
00009c  f04f0101          MOV      r1,#1
0000a0  4ad8              LDR      r2,|L1.1028|
0000a2  f8c2119c          STR      r1,[r2,#0x19c]
;;;62     
;;;63     } 	
0000a6  4770              BX       lr
;;;64     
                          ENDP

                  LCD_WriteReg PROC
;;;66     //写寄存器
;;;67     void LCD_WriteReg(u16 LCD_Reg, u16 LCD_RegValue)
0000a8  b510              PUSH     {r4,lr}
;;;68     {	
0000aa  4603              MOV      r3,r0
0000ac  460c              MOV      r4,r1
;;;69     	LCD_WR_REG(LCD_Reg);  
0000ae  4618              MOV      r0,r3
0000b0  f7fffffe          BL       LCD_WR_REG
;;;70     	LCD_WR_DATA(LCD_RegValue);	    		 
0000b4  4620              MOV      r0,r4
0000b6  f7fffffe          BL       LCD_WR_DATA
;;;71     }	   
0000ba  bd10              POP      {r4,pc}
;;;72     //读寄存器
                          ENDP

                  LCD_ReadReg PROC
;;;73     u16 LCD_ReadReg(u16 LCD_Reg)
0000bc  b570              PUSH     {r4-r6,lr}
;;;74     {										   
0000be  4603              MOV      r3,r0
;;;75     	u16 t1,t2,t;
;;;76     	LCD_WR_REG(LCD_Reg);  //写入要读的寄存器号  
0000c0  4618              MOV      r0,r3
0000c2  f7fffffe          BL       LCD_WR_REG
;;;77     	GPIOB->CRL=0X88888888; //PB0-7  上拉输入
0000c6  f04f3088          MOV      r0,#0x88888888
0000ca  49d1              LDR      r1,|L1.1040|
0000cc  6008              STR      r0,[r1,#0]
;;;78     	GPIOB->CRH=0X88888888; //PB8-15 上拉输入
0000ce  49d1              LDR      r1,|L1.1044|
0000d0  f8c10c04          STR      r0,[r1,#0xc04]
;;;79     	GPIOB->ODR=0XFFFF;    //全部输出高
0000d4  f64f70ff          MOV      r0,#0xffff
0000d8  49cb              LDR      r1,|L1.1032|
0000da  6008              STR      r0,[r1,#0]
;;;80     
;;;81     	LCD_RS=1;
0000dc  f04f0001          MOV      r0,#1
0000e0  49c7              LDR      r1,|L1.1024|
0000e2  6008              STR      r0,[r1,#0]
;;;82     	//读取数据(读寄存器时,并不需要读2次)
;;;83     	LCD_RD=0;		   
0000e4  f04f0000          MOV      r0,#0
0000e8  49cb              LDR      r1,|L1.1048|
0000ea  6008              STR      r0,[r1,#0]
;;;84     	LCD_RD=1;  
0000ec  f04f0001          MOV      r0,#1
0000f0  49c4              LDR      r1,|L1.1028|
0000f2  f8c10198          STR      r0,[r1,#0x198]
;;;85     	t1=(0xff00&GPIOB->IDR);	 	 
0000f6  48c9              LDR      r0,|L1.1052|
0000f8  6800              LDR      r0,[r0,#0]
0000fa  f400447f          AND      r4,r0,#0xff00
;;;86     
;;;87     	LCD_RD=0;				   
0000fe  f04f0000          MOV      r0,#0
000102  49c5              LDR      r1,|L1.1048|
000104  6008              STR      r0,[r1,#0]
;;;88     	LCD_RD=1;
000106  f04f0001          MOV      r0,#1
00010a  49be              LDR      r1,|L1.1028|
00010c  f8c10198          STR      r0,[r1,#0x198]
;;;89     	t2=(0xff00&GPIOB->IDR);   
000110  48c0              LDR      r0,|L1.1044|
000112  f8d00c08          LDR      r0,[r0,#0xc08]
000116  f400457f          AND      r5,r0,#0xff00
;;;90     	t=(t2>>8)|t1; 
00011a  ea442625          ORR      r6,r4,r5,ASR #8
;;;91     
;;;92     	GPIOB->CRL=0X33333333; //PB0-7  上拉输出
00011e  f04f3033          MOV      r0,#0x33333333
000122  49bb              LDR      r1,|L1.1040|
000124  6008              STR      r0,[r1,#0]
;;;93     	GPIOB->CRH=0X33333333; //PB8-15 上拉输出
000126  f1010104          ADD      r1,r1,#4
00012a  6008              STR      r0,[r1,#0]
;;;94     	GPIOB->ODR=0XFFFF;    //全部输出高
00012c  f64f70ff          MOV      r0,#0xffff
000130  49b5              LDR      r1,|L1.1032|
000132  6008              STR      r0,[r1,#0]
;;;95     	return t;  
000134  4630              MOV      r0,r6
;;;96     }   
000136  bd70              POP      {r4-r6,pc}
;;;97     //开始写GRAM
                          ENDP

                  LCD_WriteRAM_Prepare PROC
;;;98     void LCD_WriteRAM_Prepare(void)
000138  b500              PUSH     {lr}
;;;99     {
;;;100    	LCD_WR_REG(R34);
00013a  2022              MOVS     r0,#0x22
00013c  f7fffffe          BL       LCD_WR_REG
;;;101    }	 
000140  bd00              POP      {pc}
;;;102    //LCD写GRAM
                          ENDP

                  LCD_WriteRAM PROC
;;;103    void LCD_WriteRAM(u16 RGB_Code)
000142  b500              PUSH     {lr}
;;;104    {							    
000144  4603              MOV      r3,r0
;;;105    	LCD_WR_DATA(RGB_Code);//写十六位GRAM
000146  4618              MOV      r0,r3
000148  f7fffffe          BL       LCD_WR_DATA
;;;106    }
00014c  bd00              POP      {pc}
;;;107    
                          ENDP

                  LCD_Clear PROC
;;;296    //Color:要清屏的填充色
;;;297    void LCD_Clear(u16 Color)
00014e  b570              PUSH     {r4-r6,lr}
;;;298    {
000150  4605              MOV      r5,r0
;;;299    	u32 index=0;	        
000152  2400              MOVS     r4,#0
;;;300    	LCD_SetCursor(0x00,0x0000);//设置光标位置 
000154  2100              MOVS     r1,#0
000156  4608              MOV      r0,r1
000158  f7fffffe          BL       LCD_SetCursor
;;;301    	LCD_WriteRAM_Prepare();     //开始写入GRAM	 	  
00015c  f7fffffe          BL       LCD_WriteRAM_Prepare
;;;302    	for(index=0;index<76800;index++)
000160  bf00              NOP      
000162  e003              B        |L1.364|
                  |L1.356|
;;;303    	{
;;;304    		LCD_WR_DATA(Color);   	  
000164  4628              MOV      r0,r5
000166  f7fffffe          BL       LCD_WR_DATA
00016a  1c64              ADDS     r4,r4,#1              ;302
                  |L1.364|
00016c  f5b43f96          CMP      r4,#0x12c00           ;302
000170  d3f8              BCC      |L1.356|
;;;305    	}
;;;306    }  
000172  bd70              POP      {r4-r6,pc}
;;;307    //在指定区域内填充指定颜色
                          ENDP

                  LCD_Init PROC
;;;108    //初始化lcd		
;;;109    void LCD_Init(void)
000174  b510              PUSH     {r4,lr}
;;;110    { 
;;;111     	RCC->APB2ENR|=1<<3;//先使能外设PORTB时钟
000176  48aa              LDR      r0,|L1.1056|
000178  6980              LDR      r0,[r0,#0x18]
00017a  f0400008          ORR      r0,r0,#8
00017e  49a8              LDR      r1,|L1.1056|
000180  6188              STR      r0,[r1,#0x18]
;;;112     	RCC->APB2ENR|=1<<4;//先使能外设PORTC时钟
000182  4608              MOV      r0,r1
000184  6980              LDR      r0,[r0,#0x18]
000186  f0400010          ORR      r0,r0,#0x10
00018a  6188              STR      r0,[r1,#0x18]
;;;113    
;;;114    	RCC->APB2ENR|=1<<0;    //开启辅助时钟	 
00018c  4608              MOV      r0,r1
00018e  6980              LDR      r0,[r0,#0x18]
000190  f0400001          ORR      r0,r0,#1
000194  6188              STR      r0,[r1,#0x18]
;;;115    	//PORTB 推挽输出 	
;;;116    	GPIOB->CRH=0X33333333;
000196  f04f3033          MOV      r0,#0x33333333
00019a  49a2              LDR      r1,|L1.1060|
00019c  6008              STR      r0,[r1,#0]
;;;117    	GPIOB->CRL=0X33333333; 	 
00019e  499d              LDR      r1,|L1.1044|
0001a0  f8c10c00          STR      r0,[r1,#0xc00]
;;;118    	GPIOB->ODR=0XFFFF;
0001a4  f64f70ff          MOV      r0,#0xffff
0001a8  4997              LDR      r1,|L1.1032|
0001aa  6008              STR      r0,[r1,#0]
;;;119    
;;;120    	GPIOC->CRH=0X33333333;
0001ac  f04f3033          MOV      r0,#0x33333333
0001b0  499d              LDR      r1,|L1.1064|
0001b2  6048              STR      r0,[r1,#4]
;;;121    	GPIOC->CRL=0X33333333; 	 
0001b4  6008              STR      r0,[r1,#0]
;;;122    	GPIOC->ODR=0XFFFF;
0001b6  f64f70ff          MOV      r0,#0xffff
0001ba  60c8              STR      r0,[r1,#0xc]
;;;123    	
;;;124    	LCD_RST=0;
0001bc  f04f0000          MOV      r0,#0
0001c0  4990              LDR      r1,|L1.1028|
0001c2  f8c10194          STR      r0,[r1,#0x194]
;;;125    	delay_ms(1000); 
0001c6  f44f707a          MOV      r0,#0x3e8
0001ca  f7fffffe          BL       delay_ms
;;;126    	LCD_RST=1; 					 
0001ce  2001              MOVS     r0,#1
0001d0  4996              LDR      r1,|L1.1068|
0001d2  6008              STR      r0,[r1,#0]
;;;127    	delay_ms(50); // delay 50 ms 
0001d4  f04f0032          MOV      r0,#0x32
0001d8  f7fffffe          BL       delay_ms
;;;128    	LCD_WriteReg(0x0000,0x0001);
0001dc  2101              MOVS     r1,#1
0001de  2000              MOVS     r0,#0
0001e0  f7fffffe          BL       LCD_WriteReg
;;;129    	delay_ms(50); // delay 50 ms 
0001e4  2032              MOVS     r0,#0x32
0001e6  f7fffffe          BL       delay_ms
;;;130    	DeviceCode = LCD_ReadReg(0x0000);   
0001ea  2000              MOVS     r0,#0
0001ec  f7fffffe          BL       LCD_ReadReg
0001f0  498f              LDR      r1,|L1.1072|
0001f2  8008              STRH     r0,[r1,#0]
;;;131    	printf(" LCD ID:%x\n",DeviceCode); //打印LCD ID  
0001f4  4608              MOV      r0,r1
0001f6  8801              LDRH     r1,[r0,#0]  ; DeviceCode
0001f8  a08e              ADR      r0,|L1.1076|
0001fa  f7fffffe          BL       __2printf
;;;132    	LCD_WriteReg(0x00e7,0x0010);      
0001fe  2110              MOVS     r1,#0x10
000200  20e7              MOVS     r0,#0xe7
000202  f7fffffe          BL       LCD_WriteReg
;;;133        LCD_WriteReg(0x0000,0x0001);//开启内部时钟
000206  2101              MOVS     r1,#1
000208  2000              MOVS     r0,#0
00020a  f7fffffe          BL       LCD_WriteReg
;;;134        LCD_WriteReg(0x0001,0x0100);     
00020e  f44f7180          MOV      r1,#0x100
000212  2001              MOVS     r0,#1
000214  f7fffffe          BL       LCD_WriteReg
;;;135        LCD_WriteReg(0x0002,0x0700);//电源开启 
000218  f44f61e0          MOV      r1,#0x700
00021c  2002              MOVS     r0,#2
00021e  f7fffffe          BL       LCD_WriteReg
;;;136        LCD_WriteReg(0x0003,(1<<12)|(3<<4)|(0<<3) );   
000222  f2410130          MOV      r1,#0x1030
000226  2003              MOVS     r0,#3
000228  f7fffffe          BL       LCD_WriteReg
;;;137        LCD_WriteReg(0x0004,0x0000);                                   
00022c  2100              MOVS     r1,#0
00022e  2004              MOVS     r0,#4
000230  f7fffffe          BL       LCD_WriteReg
;;;138        LCD_WriteReg(0x0008,0x0207);	           
000234  f2402107          MOV      r1,#0x207
000238  2008              MOVS     r0,#8
00023a  f7fffffe          BL       LCD_WriteReg
;;;139        LCD_WriteReg(0x0009,0x0000);         
00023e  2100              MOVS     r1,#0
000240  2009              MOVS     r0,#9
000242  f7fffffe          BL       LCD_WriteReg
;;;140        LCD_WriteReg(0x000a,0x0000);        
000246  2100              MOVS     r1,#0
000248  200a              MOVS     r0,#0xa
00024a  f7fffffe          BL       LCD_WriteReg
;;;141        LCD_WriteReg(0x000c,0x0001);         
00024e  2101              MOVS     r1,#1
000250  200c              MOVS     r0,#0xc
000252  f7fffffe          BL       LCD_WriteReg
;;;142        LCD_WriteReg(0x000d,0x0000);         
000256  2100              MOVS     r1,#0
000258  200d              MOVS     r0,#0xd
00025a  f7fffffe          BL       LCD_WriteReg
;;;143        LCD_WriteReg(0x000f,0x0000);
00025e  2100              MOVS     r1,#0
000260  200f              MOVS     r0,#0xf
000262  f7fffffe          BL       LCD_WriteReg
;;;144    	//电源配置
;;;145        LCD_WriteReg(0x0010,0x0000);   
000266  2100              MOVS     r1,#0
000268  2010              MOVS     r0,#0x10
00026a  f7fffffe          BL       LCD_WriteReg
;;;146        LCD_WriteReg(0x0011,0x0007);
00026e  2107              MOVS     r1,#7
000270  2011              MOVS     r0,#0x11
000272  f7fffffe          BL       LCD_WriteReg
;;;147        LCD_WriteReg(0x0012,0x0000);                                                                 
000276  2100              MOVS     r1,#0
000278  2012              MOVS     r0,#0x12
00027a  f7fffffe          BL       LCD_WriteReg
;;;148        LCD_WriteReg(0x0013,0x0000);                 
00027e  2100              MOVS     r1,#0
000280  2013              MOVS     r0,#0x13
000282  f7fffffe          BL       LCD_WriteReg
;;;149        delay_ms(50); 
000286  2032              MOVS     r0,#0x32
000288  f7fffffe          BL       delay_ms
;;;150        LCD_WriteReg(0x0010,0x1590);   
00028c  f2415190          MOV      r1,#0x1590
000290  2010              MOVS     r0,#0x10
000292  f7fffffe          BL       LCD_WriteReg
;;;151        LCD_WriteReg(0x0011,0x0227);
000296  f2402127          MOV      r1,#0x227
00029a  2011              MOVS     r0,#0x11
00029c  f7fffffe          BL       LCD_WriteReg
;;;152        delay_ms(50); 
0002a0  2032              MOVS     r0,#0x32
0002a2  f7fffffe          BL       delay_ms
;;;153        LCD_WriteReg(0x0012,0x009c);                  
0002a6  219c              MOVS     r1,#0x9c
0002a8  2012              MOVS     r0,#0x12
0002aa  f7fffffe          BL       LCD_WriteReg
;;;154        delay_ms(50); 
0002ae  2032              MOVS     r0,#0x32
0002b0  f7fffffe          BL       delay_ms
;;;155        LCD_WriteReg(0x0013,0x1900);   
0002b4  f44f51c8          MOV      r1,#0x1900
0002b8  2013              MOVS     r0,#0x13
0002ba  f7fffffe          BL       LCD_WriteReg
;;;156        LCD_WriteReg(0x0029,0x0023);
0002be  2123              MOVS     r1,#0x23
0002c0  2029              MOVS     r0,#0x29
0002c2  f7fffffe          BL       LCD_WriteReg
;;;157        LCD_WriteReg(0x002b,0x000e);
0002c6  210e              MOVS     r1,#0xe
0002c8  202b              MOVS     r0,#0x2b
0002ca  f7fffffe          BL       LCD_WriteReg
;;;158        delay_ms(50); 
0002ce  2032              MOVS     r0,#0x32
0002d0  f7fffffe          BL       delay_ms
;;;159        LCD_WriteReg(0x0020,0x0000);                                                            
0002d4  2100              MOVS     r1,#0
0002d6  2020              MOVS     r0,#0x20
0002d8  f7fffffe          BL       LCD_WriteReg
;;;160        LCD_WriteReg(0x0021,0x013f);           
0002dc  f240113f          MOV      r1,#0x13f
0002e0  2021              MOVS     r0,#0x21
0002e2  f7fffffe          BL       LCD_WriteReg
;;;161    	delay_ms(50); 
0002e6  2032              MOVS     r0,#0x32
0002e8  f7fffffe          BL       delay_ms
;;;162    	//伽马校正
;;;163        LCD_WriteReg(0x0030,0x0007); 
0002ec  2107              MOVS     r1,#7
0002ee  2030              MOVS     r0,#0x30
0002f0  f7fffffe          BL       LCD_WriteReg
;;;164        LCD_WriteReg(0x0031,0x0707);   
0002f4  f2407107          MOV      r1,#0x707
0002f8  2031              MOVS     r0,#0x31
0002fa  f7fffffe          BL       LCD_WriteReg
;;;165        LCD_WriteReg(0x0032,0x0006);
0002fe  2106              MOVS     r1,#6
000300  2032              MOVS     r0,#0x32
000302  f7fffffe          BL       LCD_WriteReg
;;;166        LCD_WriteReg(0x0035,0x0704);
000306  f2407104          MOV      r1,#0x704
00030a  2035              MOVS     r0,#0x35
00030c  f7fffffe          BL       LCD_WriteReg
;;;167        LCD_WriteReg(0x0036,0x1f04); 
000310  f6417104          MOV      r1,#0x1f04
000314  2036              MOVS     r0,#0x36
000316  f7fffffe          BL       LCD_WriteReg
;;;168        LCD_WriteReg(0x0037,0x0004);
00031a  2104              MOVS     r1,#4
00031c  2037              MOVS     r0,#0x37
00031e  f7fffffe          BL       LCD_WriteReg
;;;169        LCD_WriteReg(0x0038,0x0000);        
000322  2100              MOVS     r1,#0
000324  2038              MOVS     r0,#0x38
000326  f7fffffe          BL       LCD_WriteReg
;;;170        LCD_WriteReg(0x0039,0x0706);     
00032a  f2407106          MOV      r1,#0x706
00032e  2039              MOVS     r0,#0x39
000330  f7fffffe          BL       LCD_WriteReg
;;;171        LCD_WriteReg(0x003c,0x0701);
000334  f2407101          MOV      r1,#0x701
000338  203c              MOVS     r0,#0x3c
00033a  f7fffffe          BL       LCD_WriteReg
;;;172        LCD_WriteReg(0x003d,0x000f);
00033e  210f              MOVS     r1,#0xf
000340  203d              MOVS     r0,#0x3d
000342  f7fffffe          BL       LCD_WriteReg
;;;173        delay_ms(50); 
000346  2032              MOVS     r0,#0x32
000348  f7fffffe          BL       delay_ms
;;;174        LCD_WriteReg(0x0050,0x0000); //水平GRAM起始位置 
00034c  2100              MOVS     r1,#0
00034e  2050              MOVS     r0,#0x50
000350  f7fffffe          BL       LCD_WriteReg
;;;175        LCD_WriteReg(0x0051,0x00ef); //水平GRAM终止位置                    
000354  21ef              MOVS     r1,#0xef
000356  2051              MOVS     r0,#0x51
000358  f7fffffe          BL       LCD_WriteReg
;;;176        LCD_WriteReg(0x0052,0x0000); //垂直GRAM起始位置                    
00035c  2100              MOVS     r1,#0
00035e  2052              MOVS     r0,#0x52
000360  f7fffffe          BL       LCD_WriteReg
;;;177        LCD_WriteReg(0x0053,0x013f); //垂直GRAM终止位置  
000364  f240113f          MOV      r1,#0x13f
000368  2053              MOVS     r0,#0x53
00036a  f7fffffe          BL       LCD_WriteReg
;;;178        
;;;179        LCD_WriteReg(0x0060,0xa700);        
00036e  f44f4127          MOV      r1,#0xa700
000372  2060              MOVS     r0,#0x60
000374  f7fffffe          BL       LCD_WriteReg
;;;180        LCD_WriteReg(0x0061,0x0001); 
000378  2101              MOVS     r1,#1
00037a  2061              MOVS     r0,#0x61
00037c  f7fffffe          BL       LCD_WriteReg
;;;181        LCD_WriteReg(0x006a,0x0000);
000380  2100              MOVS     r1,#0
000382  206a              MOVS     r0,#0x6a
000384  f7fffffe          BL       LCD_WriteReg
;;;182        LCD_WriteReg(0x0080,0x0000);
000388  2100              MOVS     r1,#0
00038a  2080              MOVS     r0,#0x80
00038c  f7fffffe          BL       LCD_WriteReg
;;;183        LCD_WriteReg(0x0081,0x0000);
000390  2100              MOVS     r1,#0
000392  2081              MOVS     r0,#0x81
000394  f7fffffe          BL       LCD_WriteReg
;;;184        LCD_WriteReg(0x0082,0x0000);
000398  2100              MOVS     r1,#0
00039a  2082              MOVS     r0,#0x82
00039c  f7fffffe          BL       LCD_WriteReg
;;;185        LCD_WriteReg(0x0083,0x0000);
0003a0  2100              MOVS     r1,#0
0003a2  2083              MOVS     r0,#0x83
0003a4  f7fffffe          BL       LCD_WriteReg
;;;186        LCD_WriteReg(0x0084,0x0000);
0003a8  2100              MOVS     r1,#0
0003aa  2084              MOVS     r0,#0x84
0003ac  f7fffffe          BL       LCD_WriteReg
;;;187        LCD_WriteReg(0x0085,0x0000);
0003b0  2100              MOVS     r1,#0
0003b2  2085              MOVS     r0,#0x85
0003b4  f7fffffe          BL       LCD_WriteReg
;;;188      
;;;189        LCD_WriteReg(0x0090,0x0010);     
0003b8  2110              MOVS     r1,#0x10
0003ba  2090              MOVS     r0,#0x90
0003bc  f7fffffe          BL       LCD_WriteReg
;;;190        LCD_WriteReg(0x0092,0x0000);  
0003c0  2100              MOVS     r1,#0
0003c2  2092              MOVS     r0,#0x92
0003c4  f7fffffe          BL       LCD_WriteReg
;;;191        LCD_WriteReg(0x0093,0x0003);
0003c8  2103              MOVS     r1,#3
0003ca  2093              MOVS     r0,#0x93
0003cc  f7fffffe          BL       LCD_WriteReg
;;;192        LCD_WriteReg(0x0095,0x0110);
0003d0  f44f7188          MOV      r1,#0x110
0003d4  2095              MOVS     r0,#0x95
0003d6  f7fffffe          BL       LCD_WriteReg
;;;193        LCD_WriteReg(0x0097,0x0000);        
0003da  2100              MOVS     r1,#0
0003dc  2097              MOVS     r0,#0x97
0003de  f7fffffe          BL       LCD_WriteReg
;;;194        LCD_WriteReg(0x0098,0x0000);  
0003e2  2100              MOVS     r1,#0
0003e4  2098              MOVS     r0,#0x98
0003e6  f7fffffe          BL       LCD_WriteReg
;;;195        //开启显示设置    
;;;196        LCD_WriteReg(0x0007,0x0133);   
0003ea  f2401133          MOV      r1,#0x133
0003ee  2007              MOVS     r0,#7
0003f0  f7fffffe          BL       LCD_WriteReg
;;;197        LCD_WriteReg(0x0020,0x0000);                                                            
0003f4  2100              MOVS     r1,#0
0003f6  2020              MOVS     r0,#0x20
0003f8  f7fffffe          BL       LCD_WriteReg
;;;198        LCD_WriteReg(0x0021,0x013f);   
0003fc  e020              B        |L1.1088|
0003fe  0000              DCW      0x0000
                  |L1.1024|
                          DCD      0x422201a0
                  |L1.1028|
                          DCD      0x42220000
                  |L1.1032|
                          DCD      0x40010c0c
                  |L1.1036|
                          DCD      0x4222019c
                  |L1.1040|
                          DCD      0x40010c00
                  |L1.1044|
                          DCD      0x40010000
                  |L1.1048|
                          DCD      0x42220198
                  |L1.1052|
                          DCD      0x40010c08
                  |L1.1056|
                          DCD      0x40021000
                  |L1.1060|
                          DCD      0x40010c04
                  |L1.1064|
                          DCD      0x40011000
                  |L1.1068|
                          DCD      0x42220194
                  |L1.1072|
                          DCD      DeviceCode
                  |L1.1076|
000434  204c4344          DCB      " LCD ID:%x\n",0
000438  2049443a
00043c  25780a00
                  |L1.1088|
000440  f240113f          MOV      r1,#0x13f
000444  2021              MOVS     r0,#0x21
000446  f7fffffe          BL       LCD_WriteReg
;;;199    	LCD_Clear(BLACK);
00044a  2000              MOVS     r0,#0
00044c  f7fffffe          BL       LCD_Clear
;;;200    }  		  
000450  bd10              POP      {r4,pc}
;;;201    
                          ENDP

                  LCD_BGR2RGB PROC
;;;206    //返回值：RGB格式的颜色值
;;;207    u16 LCD_BGR2RGB(u16 c)
000452  b530              PUSH     {r4,r5,lr}
;;;208    {
000454  4601              MOV      r1,r0
;;;209      u16  r,g,b,rgb;   
;;;210      b=(c>>0)&0x1f;
000456  f001041f          AND      r4,r1,#0x1f
;;;211      g=(c>>5)&0x3f;
00045a  f3c11345          UBFX     r3,r1,#5,#6
;;;212      r=(c>>11)&0x1f;	 
00045e  0aca              LSRS     r2,r1,#11
;;;213      rgb=(b<<11)+(g<<5)+(r<<0);		 
000460  02e5              LSLS     r5,r4,#11
000462  eb051543          ADD      r5,r5,r3,LSL #5
000466  4415              ADD      r5,r5,r2
000468  b2a8              UXTH     r0,r5
;;;214      return(rgb);
;;;215    }		 
00046a  bd30              POP      {r4,r5,pc}
;;;216    //读取个某点的颜色值	 
                          ENDP

                  LCD_ReadPoint PROC
;;;219    //返回值:此点的颜色
;;;220    u16 LCD_ReadPoint(u16 x,u16 y)
00046c  b570              PUSH     {r4-r6,lr}
;;;221    {
00046e  4604              MOV      r4,r0
000470  460d              MOV      r5,r1
;;;222    	u16 t;	
;;;223    	if(x>=LCD_W||y>=LCD_H)return 0;//超过了范围,直接返回		   
000472  2cf0              CMP      r4,#0xf0
000474  da02              BGE      |L1.1148|
000476  f5b57fa0          CMP      r5,#0x140
00047a  db01              BLT      |L1.1152|
                  |L1.1148|
00047c  2000              MOVS     r0,#0
                  |L1.1150|
;;;224    	LCD_SetCursor(x,y);
;;;225    	LCD_WR_REG(R34);       //选择GRAM地址 
;;;226    	GPIOB->CRL=0X88888888; //PB0-7  上拉输入
;;;227    	GPIOB->CRH=0X88888888; //PB8-15 上拉输入
;;;228    	GPIOB->ODR=0XFFFF;     //全部输出高
;;;229    
;;;230    	LCD_RS=1;
;;;231    
;;;232    	//读取数据(读GRAM时,需要读2次)
;;;233    	LCD_RD=0;					   
;;;234     	LCD_RD=1;
;;;235     	//dummy READ
;;;236    	LCD_RD=0;					   
;;;237     	LCD_RD=1;
;;;238    	t=DATAIN;  
;;;239    
;;;240    	GPIOB->CRL=0X33333333; //PB0-7  上拉输出
;;;241    	GPIOB->CRH=0X33333333; //PB8-15 上拉输出
;;;242    	GPIOB->ODR=0XFFFF;    //全部输出高  
;;;243    	if(DeviceCode==0X4531||DeviceCode==0X8989)return t;//4531/8989驱动IC
;;;244    	else return LCD_BGR2RGB(t);
;;;245    }
00047e  bd70              POP      {r4-r6,pc}
                  |L1.1152|
000480  4629              MOV      r1,r5                 ;224
000482  4620              MOV      r0,r4                 ;224
000484  f7fffffe          BL       LCD_SetCursor
000488  2022              MOVS     r0,#0x22              ;225
00048a  f7fffffe          BL       LCD_WR_REG
00048e  f04f3088          MOV      r0,#0x88888888        ;226
000492  49f9              LDR      r1,|L1.2168|
000494  6008              STR      r0,[r1,#0]            ;226
000496  49f9              LDR      r1,|L1.2172|
000498  f8c10c04          STR      r0,[r1,#0xc04]        ;227
00049c  f64f70ff          MOV      r0,#0xffff            ;228
0004a0  49f7              LDR      r1,|L1.2176|
0004a2  6008              STR      r0,[r1,#0]            ;228
0004a4  f04f0001          MOV      r0,#1                 ;230
0004a8  49f6              LDR      r1,|L1.2180|
0004aa  6008              STR      r0,[r1,#0]            ;230
0004ac  f04f0000          MOV      r0,#0                 ;233
0004b0  49f5              LDR      r1,|L1.2184|
0004b2  6008              STR      r0,[r1,#0]            ;233
0004b4  f04f0001          MOV      r0,#1                 ;234
0004b8  6008              STR      r0,[r1,#0]            ;234
0004ba  f04f0000          MOV      r0,#0                 ;236
0004be  6008              STR      r0,[r1,#0]            ;236
0004c0  f04f0001          MOV      r0,#1                 ;237
0004c4  49f1              LDR      r1,|L1.2188|
0004c6  f8c10198          STR      r0,[r1,#0x198]        ;237
0004ca  48ec              LDR      r0,|L1.2172|
0004cc  f8d00c08          LDR      r0,[r0,#0xc08]        ;238
0004d0  b286              UXTH     r6,r0                 ;238
0004d2  f04f3033          MOV      r0,#0x33333333        ;240
0004d6  49e8              LDR      r1,|L1.2168|
0004d8  6008              STR      r0,[r1,#0]            ;240
0004da  f1010104          ADD      r1,r1,#4              ;241
0004de  6008              STR      r0,[r1,#0]            ;241
0004e0  f64f70ff          MOV      r0,#0xffff            ;242
0004e4  49e5              LDR      r1,|L1.2172|
0004e6  f8c10c0c          STR      r0,[r1,#0xc0c]        ;242
0004ea  48e9              LDR      r0,|L1.2192|
0004ec  8800              LDRH     r0,[r0,#0]            ;243  ; DeviceCode
0004ee  f5a0418a          SUB      r1,r0,#0x4500         ;243
0004f2  3931              SUBS     r1,r1,#0x31           ;243
0004f4  d005              BEQ      |L1.1282|
0004f6  48e6              LDR      r0,|L1.2192|
0004f8  8800              LDRH     r0,[r0,#0]            ;243  ; DeviceCode
0004fa  f5a04109          SUB      r1,r0,#0x8900         ;243
0004fe  3989              SUBS     r1,r1,#0x89           ;243
000500  d101              BNE      |L1.1286|
                  |L1.1282|
000502  4630              MOV      r0,r6                 ;243
000504  e7bb              B        |L1.1150|
                  |L1.1286|
000506  4630              MOV      r0,r6                 ;244
000508  f7fffffe          BL       LCD_BGR2RGB
00050c  e7b7              B        |L1.1150|
;;;246    //LCD开启显示
                          ENDP

                  LCD_DisplayOn PROC
;;;247    void LCD_DisplayOn(void)
00050e  b500              PUSH     {lr}
;;;248    {					   
;;;249    	LCD_WriteReg(R7, 0x0173); //26万色显示开启
000510  f2401173          MOV      r1,#0x173
000514  2007              MOVS     r0,#7
000516  f7fffffe          BL       LCD_WriteReg
;;;250    }	 
00051a  bd00              POP      {pc}
;;;251    //LCD关闭显示
                          ENDP

                  LCD_DisplayOff PROC
;;;252    void LCD_DisplayOff(void)
00051c  b500              PUSH     {lr}
;;;253    {	   
;;;254    	LCD_WriteReg(R7, 0x0);//关闭显示 
00051e  2100              MOVS     r1,#0
000520  2007              MOVS     r0,#7
000522  f7fffffe          BL       LCD_WriteReg
;;;255    }   
000526  bd00              POP      {pc}
;;;256    //设置光标位置
                          ENDP

                  LCD_DrawPoint PROC
;;;286    //POINT_COLOR:此点的颜色
;;;287    void LCD_DrawPoint(u16 x,u16 y)
000528  b570              PUSH     {r4-r6,lr}
;;;288    {
00052a  4604              MOV      r4,r0
00052c  460d              MOV      r5,r1
;;;289    	LCD_SetCursor(x,y);//设置光标位置 
00052e  4629              MOV      r1,r5
000530  4620              MOV      r0,r4
000532  f7fffffe          BL       LCD_SetCursor
;;;290    	LCD_WR_REG(R34);//开始写入GRAM
000536  2022              MOVS     r0,#0x22
000538  f7fffffe          BL       LCD_WR_REG
;;;291    	LCD_WR_DATA(POINT_COLOR); 	    
00053c  48d5              LDR      r0,|L1.2196|
00053e  8800              LDRH     r0,[r0,#0]  ; POINT_COLOR
000540  f7fffffe          BL       LCD_WR_DATA
;;;292    } 	 
000544  bd70              POP      {r4-r6,pc}
;;;293    
                          ENDP

                  LCD_Fill PROC
;;;309    //  (xend-xsta)*(yend-ysta)
;;;310    void LCD_Fill(u16 xsta,u16 ysta,u16 xend,u16 yend,u16 color)
000546  e92d5ff0          PUSH     {r4-r12,lr}
;;;311    {          
00054a  4604              MOV      r4,r0
00054c  460d              MOV      r5,r1
00054e  4616              MOV      r6,r2
000550  461f              MOV      r7,r3
000552  f8dd8028          LDR      r8,[sp,#0x28]
;;;312    	u16 i,j;
;;;313    	u16 xlen=0;
000556  f04f0b00          MOV      r11,#0
;;;314    #ifdef USE_HORIZONTAL
;;;315    	xlen=yend-ysta+1;	   
;;;316    	for(i=xsta;i<=xend;i++)
;;;317    	{
;;;318    	 	LCD_SetCursor(i,ysta);      //设置光标位置 
;;;319    		LCD_WriteRAM_Prepare();     //开始写入GRAM	  
;;;320    		for(j=0;j<xlen;j++)LCD_WR_DATA(color);//设置光标位置 	  
;;;321    	}
;;;322    #else
;;;323    	xlen=xend-xsta+1;	   
00055a  1b30              SUBS     r0,r6,r4
00055c  1c40              ADDS     r0,r0,#1
00055e  fa1ffb80          UXTH     r11,r0
;;;324    	for(i=ysta;i<=yend;i++)
000562  46a9              MOV      r9,r5
000564  e015              B        |L1.1426|
                  |L1.1382|
;;;325    	{
;;;326    	 	LCD_SetCursor(xsta,i);      //设置光标位置 
000566  4649              MOV      r1,r9
000568  4620              MOV      r0,r4
00056a  f7fffffe          BL       LCD_SetCursor
;;;327    		LCD_WriteRAM_Prepare();     //开始写入GRAM	  
00056e  f7fffffe          BL       LCD_WriteRAM_Prepare
;;;328    		for(j=0;j<xlen;j++)LCD_WR_DATA(color);//设置光标位置 	    
000572  f04f0a00          MOV      r10,#0
000576  e006              B        |L1.1414|
                  |L1.1400|
000578  4640              MOV      r0,r8
00057a  f7fffffe          BL       LCD_WR_DATA
00057e  f10a0001          ADD      r0,r10,#1
000582  fa1ffa80          UXTH     r10,r0
                  |L1.1414|
000586  45da              CMP      r10,r11
000588  dbf6              BLT      |L1.1400|
00058a  f1090001          ADD      r0,r9,#1              ;324
00058e  fa1ff980          UXTH     r9,r0                 ;324
                  |L1.1426|
000592  45b9              CMP      r9,r7                 ;324
000594  dde7              BLE      |L1.1382|
;;;329    	}
;;;330    #endif						  	    
;;;331    }  
000596  e8bd9ff0          POP      {r4-r12,pc}
;;;332    //画线
                          ENDP

                  LCD_DrawLine PROC
;;;334    //x2,y2:终点坐标  
;;;335    void LCD_DrawLine(u16 x1, u16 y1, u16 x2, u16 y2)
00059a  e92d4fff          PUSH     {r0-r11,lr}
;;;336    {
00059e  b085              SUB      sp,sp,#0x14
0005a0  4604              MOV      r4,r0
0005a2  460d              MOV      r5,r1
0005a4  4616              MOV      r6,r2
;;;337    	u16 t; 
;;;338    	int xerr=0,yerr=0,delta_x,delta_y,distance; 
0005a6  2000              MOVS     r0,#0
0005a8  9004              STR      r0,[sp,#0x10]
0005aa  9003              STR      r0,[sp,#0xc]
;;;339    	int incx,incy,uRow,uCol; 
;;;340    
;;;341    	delta_x=x2-x1; //计算坐标增量 
0005ac  eba60804          SUB      r8,r6,r4
;;;342    	delta_y=y2-y1; 
0005b0  9808              LDR      r0,[sp,#0x20]
0005b2  eba00905          SUB      r9,r0,r5
;;;343    	uRow=x1; 
0005b6  46a3              MOV      r11,r4
;;;344    	uCol=y1; 
0005b8  9500              STR      r5,[sp,#0]
;;;345    	if(delta_x>0)incx=1; //设置单步方向 
0005ba  f1b80f00          CMP      r8,#0
0005be  dd02              BLE      |L1.1478|
0005c0  2001              MOVS     r0,#1
0005c2  9001              STR      r0,[sp,#4]
0005c4  e00a              B        |L1.1500|
                  |L1.1478|
;;;346    	else if(delta_x==0)incx=0;//垂直线 
0005c6  f1b80f00          CMP      r8,#0
0005ca  d102              BNE      |L1.1490|
0005cc  2000              MOVS     r0,#0
0005ce  9001              STR      r0,[sp,#4]
0005d0  e004              B        |L1.1500|
                  |L1.1490|
;;;347    	else {incx=-1;delta_x=-delta_x;} 
0005d2  f04f30ff          MOV      r0,#0xffffffff
0005d6  9001              STR      r0,[sp,#4]
0005d8  f1c80800          RSB      r8,r8,#0
                  |L1.1500|
;;;348    	if(delta_y>0)incy=1; 
0005dc  f1b90f00          CMP      r9,#0
0005e0  dd02              BLE      |L1.1512|
0005e2  f04f0a01          MOV      r10,#1
0005e6  e009              B        |L1.1532|
                  |L1.1512|
;;;349    	else if(delta_y==0)incy=0;//水平线 
0005e8  f1b90f00          CMP      r9,#0
0005ec  d102              BNE      |L1.1524|
0005ee  f04f0a00          MOV      r10,#0
0005f2  e003              B        |L1.1532|
                  |L1.1524|
;;;350    	else{incy=-1;delta_y=-delta_y;} 
0005f4  f04f3aff          MOV      r10,#0xffffffff
0005f8  f1c90900          RSB      r9,r9,#0
                  |L1.1532|
;;;351    	if( delta_x>delta_y)distance=delta_x; //选取基本增量坐标轴 
0005fc  45c8              CMP      r8,r9
0005fe  dd02              BLE      |L1.1542|
000600  f8cd8008          STR      r8,[sp,#8]
000604  e001              B        |L1.1546|
                  |L1.1542|
;;;352    	else distance=delta_y; 
000606  f8cd9008          STR      r9,[sp,#8]
                  |L1.1546|
;;;353    	for(t=0;t<=distance+1;t++ )//画线输出 
00060a  2700              MOVS     r7,#0
00060c  e022              B        |L1.1620|
                  |L1.1550|
;;;354    	{  
;;;355    		LCD_DrawPoint(uRow,uCol);//画点 
00060e  9800              LDR      r0,[sp,#0]
000610  b281              UXTH     r1,r0
000612  fa1ff08b          UXTH     r0,r11
000616  f7fffffe          BL       LCD_DrawPoint
;;;356    		xerr+=delta_x ; 
00061a  9804              LDR      r0,[sp,#0x10]
00061c  4440              ADD      r0,r0,r8
00061e  9004              STR      r0,[sp,#0x10]
;;;357    		yerr+=delta_y ; 
000620  9803              LDR      r0,[sp,#0xc]
000622  4448              ADD      r0,r0,r9
000624  9003              STR      r0,[sp,#0xc]
;;;358    		if(xerr>distance) 
000626  9902              LDR      r1,[sp,#8]
000628  9804              LDR      r0,[sp,#0x10]
00062a  4288              CMP      r0,r1
00062c  dd05              BLE      |L1.1594|
;;;359    		{ 
;;;360    			xerr-=distance; 
00062e  9904              LDR      r1,[sp,#0x10]
000630  9802              LDR      r0,[sp,#8]
000632  1a08              SUBS     r0,r1,r0
000634  9004              STR      r0,[sp,#0x10]
;;;361    			uRow+=incx; 
000636  9801              LDR      r0,[sp,#4]
000638  4483              ADD      r11,r11,r0
                  |L1.1594|
;;;362    		} 
;;;363    		if(yerr>distance) 
00063a  e9dd1002          LDRD     r1,r0,[sp,#8]
00063e  4288              CMP      r0,r1
000640  dd06              BLE      |L1.1616|
;;;364    		{ 
;;;365    			yerr-=distance; 
000642  e9dd1002          LDRD     r1,r0,[sp,#8]
000646  1a40              SUBS     r0,r0,r1
000648  9003              STR      r0,[sp,#0xc]
;;;366    			uCol+=incy; 
00064a  9800              LDR      r0,[sp,#0]
00064c  4450              ADD      r0,r0,r10
00064e  9000              STR      r0,[sp,#0]
                  |L1.1616|
000650  1c78              ADDS     r0,r7,#1              ;353
000652  b287              UXTH     r7,r0                 ;353
                  |L1.1620|
000654  9802              LDR      r0,[sp,#8]            ;353
000656  1c40              ADDS     r0,r0,#1              ;353
000658  4287              CMP      r7,r0                 ;353
00065a  ddd8              BLE      |L1.1550|
;;;367    		} 
;;;368    	}  
;;;369    }    
00065c  b009              ADD      sp,sp,#0x24
00065e  e8bd8ff0          POP      {r4-r11,pc}
;;;370    //画矩形
                          ENDP

                  LCD_DrawRectangle PROC
;;;371    void LCD_DrawRectangle(u16 x1, u16 y1, u16 x2, u16 y2)
000662  e92d41f0          PUSH     {r4-r8,lr}
;;;372    {
000666  4604              MOV      r4,r0
000668  460d              MOV      r5,r1
00066a  4616              MOV      r6,r2
00066c  461f              MOV      r7,r3
;;;373    	LCD_DrawLine(x1,y1,x2,y1);
00066e  462b              MOV      r3,r5
000670  4632              MOV      r2,r6
000672  4629              MOV      r1,r5
000674  4620              MOV      r0,r4
000676  f7fffffe          BL       LCD_DrawLine
;;;374    	LCD_DrawLine(x1,y1,x1,y2);
00067a  463b              MOV      r3,r7
00067c  4622              MOV      r2,r4
00067e  4629              MOV      r1,r5
000680  4620              MOV      r0,r4
000682  f7fffffe          BL       LCD_DrawLine
;;;375    	LCD_DrawLine(x1,y2,x2,y2);
000686  463b              MOV      r3,r7
000688  4632              MOV      r2,r6
00068a  4639              MOV      r1,r7
00068c  4620              MOV      r0,r4
00068e  f7fffffe          BL       LCD_DrawLine
;;;376    	LCD_DrawLine(x2,y1,x2,y2);
000692  463b              MOV      r3,r7
000694  4632              MOV      r2,r6
000696  4629              MOV      r1,r5
000698  4630              MOV      r0,r6
00069a  f7fffffe          BL       LCD_DrawLine
;;;377    }
00069e  e8bd81f0          POP      {r4-r8,pc}
;;;378    //在指定位置画一个指定大小的圆
                          ENDP

                  Draw_Circle PROC
;;;380    //r    :半径
;;;381    void Draw_Circle(u16 x0,u16 y0,u8 r)
0006a2  e92d47f0          PUSH     {r4-r10,lr}
;;;382    {
0006a6  4604              MOV      r4,r0
0006a8  460d              MOV      r5,r1
0006aa  4616              MOV      r6,r2
;;;383    	int a,b;
;;;384    	int di;
;;;385    	a=0;b=r;	  
0006ac  2700              MOVS     r7,#0
0006ae  46b0              MOV      r8,r6
;;;386    	di=3-(r<<1);             //判断下个点位置的标志
0006b0  2003              MOVS     r0,#3
0006b2  eba00946          SUB      r9,r0,r6,LSL #1
;;;387    	while(a<=b)
0006b6  e054              B        |L1.1890|
                  |L1.1720|
;;;388    	{
;;;389    		LCD_DrawPoint(x0-b,y0-a);             //3           
0006b8  1bea              SUBS     r2,r5,r7
0006ba  b291              UXTH     r1,r2
0006bc  eba40208          SUB      r2,r4,r8
0006c0  b290              UXTH     r0,r2
0006c2  f7fffffe          BL       LCD_DrawPoint
;;;390    		LCD_DrawPoint(x0+b,y0-a);             //0           
0006c6  1bea              SUBS     r2,r5,r7
0006c8  b291              UXTH     r1,r2
0006ca  eb040208          ADD      r2,r4,r8
0006ce  b290              UXTH     r0,r2
0006d0  f7fffffe          BL       LCD_DrawPoint
;;;391    		LCD_DrawPoint(x0-a,y0+b);             //1       
0006d4  eb050208          ADD      r2,r5,r8
0006d8  b291              UXTH     r1,r2
0006da  1be2              SUBS     r2,r4,r7
0006dc  b290              UXTH     r0,r2
0006de  f7fffffe          BL       LCD_DrawPoint
;;;392    		LCD_DrawPoint(x0-b,y0-a);             //7           
0006e2  1bea              SUBS     r2,r5,r7
0006e4  b291              UXTH     r1,r2
0006e6  eba40208          SUB      r2,r4,r8
0006ea  b290              UXTH     r0,r2
0006ec  f7fffffe          BL       LCD_DrawPoint
;;;393    		LCD_DrawPoint(x0-a,y0-b);             //2             
0006f0  eba50208          SUB      r2,r5,r8
0006f4  b291              UXTH     r1,r2
0006f6  1be2              SUBS     r2,r4,r7
0006f8  b290              UXTH     r0,r2
0006fa  f7fffffe          BL       LCD_DrawPoint
;;;394    		LCD_DrawPoint(x0+b,y0+a);             //4               
0006fe  19ea              ADDS     r2,r5,r7
000700  b291              UXTH     r1,r2
000702  eb040208          ADD      r2,r4,r8
000706  b290              UXTH     r0,r2
000708  f7fffffe          BL       LCD_DrawPoint
;;;395    		LCD_DrawPoint(x0+a,y0-b);             //5
00070c  eba50208          SUB      r2,r5,r8
000710  b291              UXTH     r1,r2
000712  19e2              ADDS     r2,r4,r7
000714  b290              UXTH     r0,r2
000716  f7fffffe          BL       LCD_DrawPoint
;;;396    		LCD_DrawPoint(x0+a,y0+b);             //6 
00071a  eb050208          ADD      r2,r5,r8
00071e  b291              UXTH     r1,r2
000720  19e2              ADDS     r2,r4,r7
000722  b290              UXTH     r0,r2
000724  f7fffffe          BL       LCD_DrawPoint
;;;397    		LCD_DrawPoint(x0-b,y0+a);             
000728  19ea              ADDS     r2,r5,r7
00072a  b291              UXTH     r1,r2
00072c  eba40208          SUB      r2,r4,r8
000730  b290              UXTH     r0,r2
000732  f7fffffe          BL       LCD_DrawPoint
;;;398    		a++;
000736  1c7f              ADDS     r7,r7,#1
;;;399    		//使用Bresenham算法画圆     
;;;400    		if(di<0)di +=4*a+6;	  
000738  f1b90f00          CMP      r9,#0
00073c  da03              BGE      |L1.1862|
00073e  00b8              LSLS     r0,r7,#2
000740  1d80              ADDS     r0,r0,#6
000742  4481              ADD      r9,r9,r0
000744  e006              B        |L1.1876|
                  |L1.1862|
;;;401    		else
;;;402    		{
;;;403    			di+=10+4*(a-b);   
000746  eba70008          SUB      r0,r7,r8
00074a  0080              LSLS     r0,r0,#2
00074c  300a              ADDS     r0,r0,#0xa
00074e  4481              ADD      r9,r9,r0
;;;404    			b--;
000750  f1a80801          SUB      r8,r8,#1
                  |L1.1876|
;;;405    		} 
;;;406    		LCD_DrawPoint(x0+a,y0+b);
000754  eb050208          ADD      r2,r5,r8
000758  b291              UXTH     r1,r2
00075a  19e2              ADDS     r2,r4,r7
00075c  b290              UXTH     r0,r2
00075e  f7fffffe          BL       LCD_DrawPoint
                  |L1.1890|
000762  4547              CMP      r7,r8                 ;387
000764  dda8              BLE      |L1.1720|
;;;407    	}
;;;408    } 
000766  e8bd87f0          POP      {r4-r10,pc}
;;;409    //在指定位置显示一个字符
                          ENDP

                  LCD_ShowChar PROC
;;;420    //mode:叠加方式(1)还是非叠加方式(0)
;;;421    void LCD_ShowChar(u16 x,u16 y,u8 num,u8 size,u8 mode)
00076a  e92d4ff8          PUSH     {r3-r11,lr}
;;;422    {  
00076e  4604              MOV      r4,r0
000770  460d              MOV      r5,r1
000772  4616              MOV      r6,r2
000774  461f              MOV      r7,r3
;;;423    #ifdef USE_HORIZONTAL
;;;424    #define MAX_CHAR_POSX 312
;;;425    #define MAX_CHAR_POSY 232 
;;;426    #else     
;;;427    #define MAX_CHAR_POSX 232
;;;428    #define MAX_CHAR_POSY 312
;;;429    #endif 
;;;430        u8 temp;
;;;431        u8 pos,t;
;;;432    	u16 x0=x;
000776  46a3              MOV      r11,r4
;;;433    	u16 colortemp=POINT_COLOR;      
000778  4846              LDR      r0,|L1.2196|
00077a  8800              LDRH     r0,[r0,#0]  ; POINT_COLOR
00077c  9000              STR      r0,[sp,#0]
;;;434        if(x>MAX_CHAR_POSX||y>MAX_CHAR_POSY)return;	    
00077e  2ce8              CMP      r4,#0xe8
000780  dc02              BGT      |L1.1928|
000782  f5b57f9c          CMP      r5,#0x138
000786  dd01              BLE      |L1.1932|
                  |L1.1928|
;;;435    	//设置窗口		   
;;;436    	num=num-' ';//得到偏移后的值
;;;437    	if(!mode) //非叠加方式
;;;438    	{
;;;439    		for(pos=0;pos<size;pos++)
;;;440    		{
;;;441    			if(size==12)temp=asc2_1206[num][pos];//调用1206字体
;;;442    			else temp=asc2_1608[num][pos];		 //调用1608字体
;;;443    			for(t=0;t<size/2;t++)
;;;444    		    {                 
;;;445    		        if(temp&0x01)POINT_COLOR=colortemp;
;;;446    				else POINT_COLOR=BACK_COLOR;
;;;447    				LCD_DrawPoint(x,y);	
;;;448    				temp>>=1; 
;;;449    				x++;
;;;450    		    }
;;;451    			x=x0;
;;;452    			y++;
;;;453    		}	
;;;454    	}else//叠加方式
;;;455    	{
;;;456    		for(pos=0;pos<size;pos++)
;;;457    		{
;;;458    			if(size==12)temp=asc2_1206[num][pos];//调用1206字体
;;;459    			else temp=asc2_1608[num][pos];		 //调用1608字体
;;;460    			for(t=0;t<size/2;t++)
;;;461    		    {                 
;;;462    		        if(temp&0x01)LCD_DrawPoint(x+t,y+pos);//画一个点     
;;;463    		        temp>>=1; 
;;;464    		    }
;;;465    		}
;;;466    	}
;;;467    	POINT_COLOR=colortemp;	    	   	 	  
;;;468    }   
000788  e8bd8ff8          POP      {r3-r11,pc}
                  |L1.1932|
00078c  f1a60020          SUB      r0,r6,#0x20           ;436
000790  b2c6              UXTB     r6,r0                 ;436
000792  980a              LDR      r0,[sp,#0x28]         ;437
000794  2800              CMP      r0,#0                 ;437
000796  d139              BNE      |L1.2060|
000798  4681              MOV      r9,r0                 ;439
00079a  e034              B        |L1.2054|
                  |L1.1948|
00079c  2f0c              CMP      r7,#0xc               ;441
00079e  d107              BNE      |L1.1968|
0007a0  eb060046          ADD      r0,r6,r6,LSL #1       ;441
0007a4  493c              LDR      r1,|L1.2200|
0007a6  eb010080          ADD      r0,r1,r0,LSL #2       ;441
0007aa  f8108009          LDRB     r8,[r0,r9]            ;441
0007ae  e004              B        |L1.1978|
                  |L1.1968|
0007b0  483a              LDR      r0,|L1.2204|
0007b2  eb001006          ADD      r0,r0,r6,LSL #4       ;442
0007b6  f8108009          LDRB     r8,[r0,r9]            ;442
                  |L1.1978|
0007ba  f04f0a00          MOV      r10,#0                ;443
0007be  e016              B        |L1.2030|
                  |L1.1984|
0007c0  f0180f01          TST      r8,#1                 ;445
0007c4  d003              BEQ      |L1.1998|
0007c6  4933              LDR      r1,|L1.2196|
0007c8  9800              LDR      r0,[sp,#0]            ;445
0007ca  8008              STRH     r0,[r1,#0]            ;445
0007cc  e003              B        |L1.2006|
                  |L1.1998|
0007ce  4834              LDR      r0,|L1.2208|
0007d0  8800              LDRH     r0,[r0,#0]            ;446  ; BACK_COLOR
0007d2  4930              LDR      r1,|L1.2196|
0007d4  8008              STRH     r0,[r1,#0]            ;446
                  |L1.2006|
0007d6  4629              MOV      r1,r5                 ;447
0007d8  4620              MOV      r0,r4                 ;447
0007da  f7fffffe          BL       LCD_DrawPoint
0007de  ea4f0868          ASR      r8,r8,#1              ;448
0007e2  1c60              ADDS     r0,r4,#1              ;449
0007e4  b284              UXTH     r4,r0                 ;449
0007e6  f10a0001          ADD      r0,r10,#1             ;443
0007ea  f0000aff          AND      r10,r0,#0xff          ;443
                  |L1.2030|
0007ee  eb0771d7          ADD      r1,r7,r7,LSR #31      ;443
0007f2  ebba0f61          CMP      r10,r1,ASR #1         ;443
0007f6  dbe3              BLT      |L1.1984|
0007f8  465c              MOV      r4,r11                ;451
0007fa  1c68              ADDS     r0,r5,#1              ;452
0007fc  b285              UXTH     r5,r0                 ;452
0007fe  f1090001          ADD      r0,r9,#1              ;439
000802  f00009ff          AND      r9,r0,#0xff           ;439
                  |L1.2054|
000806  45b9              CMP      r9,r7                 ;439
000808  dbc8              BLT      |L1.1948|
00080a  e030              B        |L1.2158|
                  |L1.2060|
00080c  f04f0900          MOV      r9,#0                 ;456
000810  e02b              B        |L1.2154|
                  |L1.2066|
000812  2f0c              CMP      r7,#0xc               ;458
000814  d107              BNE      |L1.2086|
000816  eb060046          ADD      r0,r6,r6,LSL #1       ;458
00081a  491f              LDR      r1,|L1.2200|
00081c  eb010080          ADD      r0,r1,r0,LSL #2       ;458
000820  f8108009          LDRB     r8,[r0,r9]            ;458
000824  e004              B        |L1.2096|
                  |L1.2086|
000826  481d              LDR      r0,|L1.2204|
000828  eb001006          ADD      r0,r0,r6,LSL #4       ;459
00082c  f8108009          LDRB     r8,[r0,r9]            ;459
                  |L1.2096|
000830  f04f0a00          MOV      r10,#0                ;460
000834  e010              B        |L1.2136|
                  |L1.2102|
000836  f0180f01          TST      r8,#1                 ;462
00083a  d007              BEQ      |L1.2124|
00083c  eb050209          ADD      r2,r5,r9              ;462
000840  b291              UXTH     r1,r2                 ;462
000842  eb04020a          ADD      r2,r4,r10             ;462
000846  b290              UXTH     r0,r2                 ;462
000848  f7fffffe          BL       LCD_DrawPoint
                  |L1.2124|
00084c  ea4f0868          ASR      r8,r8,#1              ;463
000850  f10a0001          ADD      r0,r10,#1             ;460
000854  f0000aff          AND      r10,r0,#0xff          ;460
                  |L1.2136|
000858  eb0771d7          ADD      r1,r7,r7,LSR #31      ;460
00085c  ebba0f61          CMP      r10,r1,ASR #1         ;460
000860  dbe9              BLT      |L1.2102|
000862  f1090001          ADD      r0,r9,#1              ;456
000866  f00009ff          AND      r9,r0,#0xff           ;456
                  |L1.2154|
00086a  45b9              CMP      r9,r7                 ;456
00086c  dbd1              BLT      |L1.2066|
                  |L1.2158|
00086e  4909              LDR      r1,|L1.2196|
000870  9800              LDR      r0,[sp,#0]            ;467
000872  8008              STRH     r0,[r1,#0]            ;467
000874  e788              B        |L1.1928|
000876  0000              DCW      0x0000
                  |L1.2168|
                          DCD      0x40010c00
                  |L1.2172|
                          DCD      0x40010000
                  |L1.2176|
                          DCD      0x40010c0c
                  |L1.2180|
                          DCD      0x422201a0
                  |L1.2184|
                          DCD      0x42220198
                  |L1.2188|
                          DCD      0x42220000
                  |L1.2192|
                          DCD      DeviceCode
                  |L1.2196|
                          DCD      POINT_COLOR
                  |L1.2200|
                          DCD      asc2_1206
                  |L1.2204|
                          DCD      asc2_1608
                  |L1.2208|
                          DCD      BACK_COLOR
                          ENDP

                  mypow PROC
;;;469    //m^n函数
;;;470    u32 mypow(u8 m,u8 n)
0008a4  b510              PUSH     {r4,lr}
;;;471    {
0008a6  4602              MOV      r2,r0
;;;472    	u32 result=1;	 
0008a8  2001              MOVS     r0,#1
;;;473    	while(n--)result*=m;    
0008aa  e000              B        |L1.2222|
                  |L1.2220|
0008ac  4350              MULS     r0,r2,r0
                  |L1.2222|
0008ae  000b              MOVS     r3,r1
0008b0  f1a10401          SUB      r4,r1,#1
0008b4  b2e1              UXTB     r1,r4
0008b6  d1f9              BNE      |L1.2220|
;;;474    	return result;
;;;475    }			 
0008b8  bd10              POP      {r4,pc}
;;;476    //显示2个数字
                          ENDP

                  LCD_ShowNum PROC
;;;481    //num:数值(0~4294967295);	 
;;;482    void LCD_ShowNum(u16 x,u16 y,u32 num,u8 len,u8 size)
0008ba  e92d4fff          PUSH     {r0-r11,lr}
;;;483    {         	
0008be  b081              SUB      sp,sp,#4
0008c0  4604              MOV      r4,r0
0008c2  4615              MOV      r5,r2
0008c4  461e              MOV      r6,r3
0008c6  9f0e              LDR      r7,[sp,#0x38]
;;;484    	u8 t,temp;
;;;485    	u8 enshow=0;						   
0008c8  f04f0a00          MOV      r10,#0
;;;486    	for(t=0;t<len;t++)
0008cc  46d0              MOV      r8,r10
0008ce  e03e              B        |L1.2382|
                  |L1.2256|
;;;487    	{
;;;488    		temp=(num/mypow(10,len-t-1))%10;
0008d0  eba60008          SUB      r0,r6,r8
0008d4  1e40              SUBS     r0,r0,#1
0008d6  b2c1              UXTB     r1,r0
0008d8  200a              MOVS     r0,#0xa
0008da  f7fffffe          BL       mypow
0008de  fbb5f0f0          UDIV     r0,r5,r0
0008e2  210a              MOVS     r1,#0xa
0008e4  fbb0f2f1          UDIV     r2,r0,r1
0008e8  fb010012          MLS      r0,r1,r2,r0
0008ec  f00009ff          AND      r9,r0,#0xff
;;;489    		if(enshow==0&&t<(len-1))
0008f0  f1ba0f00          CMP      r10,#0
0008f4  d116              BNE      |L1.2340|
0008f6  1e70              SUBS     r0,r6,#1
0008f8  4540              CMP      r0,r8
0008fa  dd13              BLE      |L1.2340|
;;;490    		{
;;;491    			if(temp==0)
0008fc  f1b90f00          CMP      r9,#0
000900  d10e              BNE      |L1.2336|
;;;492    			{
;;;493    				LCD_ShowChar(x+(size/2)*t,y,' ',size,0);
000902  2300              MOVS     r3,#0
000904  46bb              MOV      r11,r7
000906  eb0771d7          ADD      r1,r7,r7,LSR #31
00090a  1049              ASRS     r1,r1,#1
00090c  fb014108          MLA      r1,r1,r8,r4
000910  b288              UXTH     r0,r1
000912  9300              STR      r3,[sp,#0]
000914  463b              MOV      r3,r7
000916  2220              MOVS     r2,#0x20
000918  9902              LDR      r1,[sp,#8]
00091a  f7fffffe          BL       LCD_ShowChar
;;;494    				continue;
00091e  e012              B        |L1.2374|
                  |L1.2336|
;;;495    			}else enshow=1; 
000920  f04f0a01          MOV      r10,#1
                  |L1.2340|
;;;496    		 	 
;;;497    		}
;;;498    	 	LCD_ShowChar(x+(size/2)*t,y,temp+'0',size,0); 
000924  2300              MOVS     r3,#0
000926  46bb              MOV      r11,r7
000928  eb0771d7          ADD      r1,r7,r7,LSR #31
00092c  1049              ASRS     r1,r1,#1
00092e  fb014108          MLA      r1,r1,r8,r4
000932  b288              UXTH     r0,r1
000934  9300              STR      r3,[sp,#0]
000936  463b              MOV      r3,r7
000938  f1090130          ADD      r1,r9,#0x30
00093c  b2ca              UXTB     r2,r1
00093e  9902              LDR      r1,[sp,#8]
000940  f7fffffe          BL       LCD_ShowChar
000944  bf00              NOP                            ;494
                  |L1.2374|
000946  f1080001          ADD      r0,r8,#1              ;486
00094a  f00008ff          AND      r8,r0,#0xff           ;486
                  |L1.2382|
00094e  45b0              CMP      r8,r6                 ;486
000950  dbbe              BLT      |L1.2256|
;;;499    	}
;;;500    } 
000952  b005              ADD      sp,sp,#0x14
000954  e8bd8ff0          POP      {r4-r11,pc}
;;;501    //显示2个数字
                          ENDP

                  LCD_Show2Num PROC
;;;505    //num:数值(0~99);	 
;;;506    void LCD_Show2Num(u16 x,u16 y,u16 num,u8 len,u8 size,u8 mode)
000958  e92d4ff8          PUSH     {r3-r11,lr}
;;;507    {         	
00095c  4604              MOV      r4,r0
00095e  460d              MOV      r5,r1
000960  4616              MOV      r6,r2
000962  461f              MOV      r7,r3
000964  f8dd8028          LDR      r8,[sp,#0x28]
;;;508    	u8 t,temp;						   
;;;509    	for(t=0;t<len;t++)
000968  f04f0900          MOV      r9,#0
00096c  e023              B        |L1.2486|
                  |L1.2414|
;;;510    	{
;;;511    		temp=(num/mypow(10,len-t-1))%10;
00096e  eba70009          SUB      r0,r7,r9
000972  1e40              SUBS     r0,r0,#1
000974  b2c1              UXTB     r1,r0
000976  200a              MOVS     r0,#0xa
000978  f7fffffe          BL       mypow
00097c  fbb6f0f0          UDIV     r0,r6,r0
000980  210a              MOVS     r1,#0xa
000982  fbb0f2f1          UDIV     r2,r0,r1
000986  fb010012          MLS      r0,r1,r2,r0
00098a  f0000aff          AND      r10,r0,#0xff
;;;512    	 	LCD_ShowChar(x+(size/2)*t,y,temp+'0',size,mode); 
00098e  9b0b              LDR      r3,[sp,#0x2c]
000990  46c3              MOV      r11,r8
000992  eb0871d8          ADD      r1,r8,r8,LSR #31
000996  1049              ASRS     r1,r1,#1
000998  fb014109          MLA      r1,r1,r9,r4
00099c  b288              UXTH     r0,r1
00099e  9300              STR      r3,[sp,#0]
0009a0  4643              MOV      r3,r8
0009a2  f10a0130          ADD      r1,r10,#0x30
0009a6  b2ca              UXTB     r2,r1
0009a8  4629              MOV      r1,r5
0009aa  f7fffffe          BL       LCD_ShowChar
0009ae  f1090001          ADD      r0,r9,#1              ;509
0009b2  f00009ff          AND      r9,r0,#0xff           ;509
                  |L1.2486|
0009b6  45b9              CMP      r9,r7                 ;509
0009b8  dbd9              BLT      |L1.2414|
;;;513    	}
;;;514    } 
0009ba  e8bd8ff8          POP      {r3-r11,pc}
;;;515    //显示字符串
                          ENDP

                  LCD_ShowString PROC
;;;518    //用16字体
;;;519    void LCD_ShowString(u16 x,u16 y,const u8 *p)
0009be  b5f8              PUSH     {r3-r7,lr}
;;;520    {         
0009c0  4604              MOV      r4,r0
0009c2  460d              MOV      r5,r1
0009c4  4616              MOV      r6,r2
;;;521        while(*p!='\0')
0009c6  e017              B        |L1.2552|
                  |L1.2504|
;;;522        {       
;;;523            if(x>MAX_CHAR_POSX){x=0;y+=16;}
0009c8  2ce8              CMP      r4,#0xe8
0009ca  dd03              BLE      |L1.2516|
0009cc  2400              MOVS     r4,#0
0009ce  f1050010          ADD      r0,r5,#0x10
0009d2  b285              UXTH     r5,r0
                  |L1.2516|
;;;524            if(y>MAX_CHAR_POSY){y=x=0;}
0009d4  f5b57f9c          CMP      r5,#0x138
0009d8  dd02              BLE      |L1.2528|
0009da  2000              MOVS     r0,#0
0009dc  4604              MOV      r4,r0
0009de  4605              MOV      r5,r0
                  |L1.2528|
;;;525            LCD_ShowChar(x,y,*p,16,0);
0009e0  2300              MOVS     r3,#0
0009e2  9300              STR      r3,[sp,#0]
0009e4  7832              LDRB     r2,[r6,#0]
0009e6  2310              MOVS     r3,#0x10
0009e8  4629              MOV      r1,r5
0009ea  4620              MOV      r0,r4
0009ec  f7fffffe          BL       LCD_ShowChar
;;;526            x+=8;
0009f0  f1040008          ADD      r0,r4,#8
0009f4  b284              UXTH     r4,r0
;;;527            p++;
0009f6  1c76              ADDS     r6,r6,#1
                  |L1.2552|
0009f8  7830              LDRB     r0,[r6,#0]            ;521
0009fa  2800              CMP      r0,#0                 ;521
0009fc  d1e4              BNE      |L1.2504|
;;;528        }  
;;;529    }
0009fe  bdf8              POP      {r3-r7,pc}
                          ENDP

                          REQUIRE _printf_percent
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  asc2_1206
000000  00000000          DCB      0x00,0x00,0x00,0x00
000004  00000000          DCB      0x00,0x00,0x00,0x00
000008  00000000          DCB      0x00,0x00,0x00,0x00
00000c  00000404          DCB      0x00,0x00,0x04,0x04
000010  04040404          DCB      0x04,0x04,0x04,0x04
000014  00040000          DCB      0x00,0x04,0x00,0x00
000018  00140a0a          DCB      0x00,0x14,0x0a,0x0a
00001c  00000000          DCB      0x00,0x00,0x00,0x00
000020  00000000          DCB      0x00,0x00,0x00,0x00
000024  00001414          DCB      0x00,0x00,0x14,0x14
000028  3f140a3f          DCB      0x3f,0x14,0x0a,0x3f
00002c  0a0a0000          DCB      0x0a,0x0a,0x00,0x00
000030  00041e15          DCB      0x00,0x04,0x1e,0x15
000034  05060c14          DCB      0x05,0x06,0x0c,0x14
000038  150f0400          DCB      0x15,0x0f,0x04,0x00
00003c  00001215          DCB      0x00,0x00,0x12,0x15
000040  0d0a142c          DCB      0x0d,0x0a,0x14,0x2c
000044  2a120000          DCB      0x2a,0x12,0x00,0x00
000048  0000040a          DCB      0x00,0x00,0x04,0x0a
00004c  0a1e1515          DCB      0x0a,0x1e,0x15,0x15
000050  09360000          DCB      0x09,0x36,0x00,0x00
000054  00020201          DCB      0x00,0x02,0x02,0x01
000058  00000000          DCB      0x00,0x00,0x00,0x00
00005c  00000000          DCB      0x00,0x00,0x00,0x00
000060  00201008          DCB      0x00,0x20,0x10,0x08
000064  08080808          DCB      0x08,0x08,0x08,0x08
000068  08102000          DCB      0x08,0x10,0x20,0x00
00006c  00020408          DCB      0x00,0x02,0x04,0x08
000070  08080808          DCB      0x08,0x08,0x08,0x08
000074  08040200          DCB      0x08,0x04,0x02,0x00
000078  00000004          DCB      0x00,0x00,0x00,0x04
00007c  150e0e15          DCB      0x15,0x0e,0x0e,0x15
000080  04000000          DCB      0x04,0x00,0x00,0x00
000084  00000404          DCB      0x00,0x00,0x04,0x04
000088  041f0404          DCB      0x04,0x1f,0x04,0x04
00008c  04000000          DCB      0x04,0x00,0x00,0x00
000090  00000000          DCB      0x00,0x00,0x00,0x00
000094  00000000          DCB      0x00,0x00,0x00,0x00
000098  00020201          DCB      0x00,0x02,0x02,0x01
00009c  00000000          DCB      0x00,0x00,0x00,0x00
0000a0  001f0000          DCB      0x00,0x1f,0x00,0x00
0000a4  00000000          DCB      0x00,0x00,0x00,0x00
0000a8  00000000          DCB      0x00,0x00,0x00,0x00
0000ac  00000000          DCB      0x00,0x00,0x00,0x00
0000b0  00020000          DCB      0x00,0x02,0x00,0x00
0000b4  00100808          DCB      0x00,0x10,0x08,0x08
0000b8  08040402          DCB      0x08,0x04,0x04,0x02
0000bc  02020100          DCB      0x02,0x02,0x01,0x00
0000c0  00000e11          DCB      0x00,0x00,0x0e,0x11
0000c4  11111111          DCB      0x11,0x11,0x11,0x11
0000c8  110e0000          DCB      0x11,0x0e,0x00,0x00
0000cc  00000406          DCB      0x00,0x00,0x04,0x06
0000d0  04040404          DCB      0x04,0x04,0x04,0x04
0000d4  040e0000          DCB      0x04,0x0e,0x00,0x00
0000d8  00000e11          DCB      0x00,0x00,0x0e,0x11
0000dc  11080402          DCB      0x11,0x08,0x04,0x02
0000e0  011f0000          DCB      0x01,0x1f,0x00,0x00
0000e4  00000e11          DCB      0x00,0x00,0x0e,0x11
0000e8  100c1010          DCB      0x10,0x0c,0x10,0x10
0000ec  110e0000          DCB      0x11,0x0e,0x00,0x00
0000f0  0000080c          DCB      0x00,0x00,0x08,0x0c
0000f4  0a0a091e          DCB      0x0a,0x0a,0x09,0x1e
0000f8  08180000          DCB      0x08,0x18,0x00,0x00
0000fc  00001f01          DCB      0x00,0x00,0x1f,0x01
000100  010f1010          DCB      0x01,0x0f,0x10,0x10
000104  110e0000          DCB      0x11,0x0e,0x00,0x00
000108  00000e09          DCB      0x00,0x00,0x0e,0x09
00010c  010f1111          DCB      0x01,0x0f,0x11,0x11
000110  110e0000          DCB      0x11,0x0e,0x00,0x00
000114  00001f09          DCB      0x00,0x00,0x1f,0x09
000118  08040404          DCB      0x08,0x04,0x04,0x04
00011c  04040000          DCB      0x04,0x04,0x00,0x00
000120  00000e11          DCB      0x00,0x00,0x0e,0x11
000124  110e1111          DCB      0x11,0x0e,0x11,0x11
000128  110e0000          DCB      0x11,0x0e,0x00,0x00
00012c  00000e11          DCB      0x00,0x00,0x0e,0x11
000130  11111e10          DCB      0x11,0x11,0x1e,0x10
000134  120e0000          DCB      0x12,0x0e,0x00,0x00
000138  00000000          DCB      0x00,0x00,0x00,0x00
00013c  04000000          DCB      0x04,0x00,0x00,0x00
000140  00040000          DCB      0x00,0x04,0x00,0x00
000144  00000000          DCB      0x00,0x00,0x00,0x00
000148  00040000          DCB      0x00,0x04,0x00,0x00
00014c  00040400          DCB      0x00,0x04,0x04,0x00
000150  00201008          DCB      0x00,0x20,0x10,0x08
000154  04020408          DCB      0x04,0x02,0x04,0x08
000158  10200000          DCB      0x10,0x20,0x00,0x00
00015c  00000000          DCB      0x00,0x00,0x00,0x00
000160  1f00001f          DCB      0x1f,0x00,0x00,0x1f
000164  00000000          DCB      0x00,0x00,0x00,0x00
000168  00020408          DCB      0x00,0x02,0x04,0x08
00016c  10201008          DCB      0x10,0x20,0x10,0x08
000170  04020000          DCB      0x04,0x02,0x00,0x00
000174  00000e11          DCB      0x00,0x00,0x0e,0x11
000178  11080404          DCB      0x11,0x08,0x04,0x04
00017c  00040000          DCB      0x00,0x04,0x00,0x00
000180  00000e11          DCB      0x00,0x00,0x0e,0x11
000184  1915151d          DCB      0x19,0x15,0x15,0x1d
000188  011e0000          DCB      0x01,0x1e,0x00,0x00
00018c  00000404          DCB      0x00,0x00,0x04,0x04
000190  0c0a0a1e          DCB      0x0c,0x0a,0x0a,0x1e
000194  12330000          DCB      0x12,0x33,0x00,0x00
000198  00000f12          DCB      0x00,0x00,0x0f,0x12
00019c  120e1212          DCB      0x12,0x0e,0x12,0x12
0001a0  120f0000          DCB      0x12,0x0f,0x00,0x00
0001a4  00001e11          DCB      0x00,0x00,0x1e,0x11
0001a8  01010101          DCB      0x01,0x01,0x01,0x01
0001ac  110e0000          DCB      0x11,0x0e,0x00,0x00
0001b0  00000f12          DCB      0x00,0x00,0x0f,0x12
0001b4  12121212          DCB      0x12,0x12,0x12,0x12
0001b8  120f0000          DCB      0x12,0x0f,0x00,0x00
0001bc  00001f12          DCB      0x00,0x00,0x1f,0x12
0001c0  0a0e0a02          DCB      0x0a,0x0e,0x0a,0x02
0001c4  121f0000          DCB      0x12,0x1f,0x00,0x00
0001c8  00001f12          DCB      0x00,0x00,0x1f,0x12
0001cc  0a0e0a02          DCB      0x0a,0x0e,0x0a,0x02
0001d0  02070000          DCB      0x02,0x07,0x00,0x00
0001d4  00001c12          DCB      0x00,0x00,0x1c,0x12
0001d8  01013911          DCB      0x01,0x01,0x39,0x11
0001dc  120c0000          DCB      0x12,0x0c,0x00,0x00
0001e0  00003312          DCB      0x00,0x00,0x33,0x12
0001e4  121e1212          DCB      0x12,0x1e,0x12,0x12
0001e8  12330000          DCB      0x12,0x33,0x00,0x00
0001ec  00001f04          DCB      0x00,0x00,0x1f,0x04
0001f0  04040404          DCB      0x04,0x04,0x04,0x04
0001f4  041f0000          DCB      0x04,0x1f,0x00,0x00
0001f8  00003e08          DCB      0x00,0x00,0x3e,0x08
0001fc  08080808          DCB      0x08,0x08,0x08,0x08
000200  08090700          DCB      0x08,0x09,0x07,0x00
000204  00003712          DCB      0x00,0x00,0x37,0x12
000208  0a060a0a          DCB      0x0a,0x06,0x0a,0x0a
00020c  12370000          DCB      0x12,0x37,0x00,0x00
000210  00000702          DCB      0x00,0x00,0x07,0x02
000214  02020202          DCB      0x02,0x02,0x02,0x02
000218  223f0000          DCB      0x22,0x3f,0x00,0x00
00021c  00001b1b          DCB      0x00,0x00,0x1b,0x1b
000220  1b1b1515          DCB      0x1b,0x1b,0x15,0x15
000224  15150000          DCB      0x15,0x15,0x00,0x00
000228  00003b12          DCB      0x00,0x00,0x3b,0x12
00022c  16161a1a          DCB      0x16,0x16,0x1a,0x1a
000230  12170000          DCB      0x12,0x17,0x00,0x00
000234  00000e11          DCB      0x00,0x00,0x0e,0x11
000238  11111111          DCB      0x11,0x11,0x11,0x11
00023c  110e0000          DCB      0x11,0x0e,0x00,0x00
000240  00000f12          DCB      0x00,0x00,0x0f,0x12
000244  120e0202          DCB      0x12,0x0e,0x02,0x02
000248  02070000          DCB      0x02,0x07,0x00,0x00
00024c  00000e11          DCB      0x00,0x00,0x0e,0x11
000250  11111117          DCB      0x11,0x11,0x11,0x17
000254  190e1800          DCB      0x19,0x0e,0x18,0x00
000258  00000f12          DCB      0x00,0x00,0x0f,0x12
00025c  120e0a12          DCB      0x12,0x0e,0x0a,0x12
000260  12370000          DCB      0x12,0x37,0x00,0x00
000264  00001e11          DCB      0x00,0x00,0x1e,0x11
000268  01060810          DCB      0x01,0x06,0x08,0x10
00026c  110f0000          DCB      0x11,0x0f,0x00,0x00
000270  00001f15          DCB      0x00,0x00,0x1f,0x15
000274  04040404          DCB      0x04,0x04,0x04,0x04
000278  040e0000          DCB      0x04,0x0e,0x00,0x00
00027c  00003312          DCB      0x00,0x00,0x33,0x12
000280  12121212          DCB      0x12,0x12,0x12,0x12
000284  120c0000          DCB      0x12,0x0c,0x00,0x00
000288  00003312          DCB      0x00,0x00,0x33,0x12
00028c  120a0a0c          DCB      0x12,0x0a,0x0a,0x0c
000290  04040000          DCB      0x04,0x04,0x00,0x00
000294  00001515          DCB      0x00,0x00,0x15,0x15
000298  150e0a0a          DCB      0x15,0x0e,0x0a,0x0a
00029c  0a0a0000          DCB      0x0a,0x0a,0x00,0x00
0002a0  00001b0a          DCB      0x00,0x00,0x1b,0x0a
0002a4  0a04040a          DCB      0x0a,0x04,0x04,0x0a
0002a8  0a1b0000          DCB      0x0a,0x1b,0x00,0x00
0002ac  00001b0a          DCB      0x00,0x00,0x1b,0x0a
0002b0  0a040404          DCB      0x0a,0x04,0x04,0x04
0002b4  040e0000          DCB      0x04,0x0e,0x00,0x00
0002b8  00001f09          DCB      0x00,0x00,0x1f,0x09
0002bc  08040402          DCB      0x08,0x04,0x04,0x02
0002c0  121f0000          DCB      0x12,0x1f,0x00,0x00
0002c4  001c0404          DCB      0x00,0x1c,0x04,0x04
0002c8  04040404          DCB      0x04,0x04,0x04,0x04
0002cc  04041c00          DCB      0x04,0x04,0x1c,0x00
0002d0  00020202          DCB      0x00,0x02,0x02,0x02
0002d4  04040808          DCB      0x04,0x04,0x08,0x08
0002d8  08100000          DCB      0x08,0x10,0x00,0x00
0002dc  000e0808          DCB      0x00,0x0e,0x08,0x08
0002e0  08080808          DCB      0x08,0x08,0x08,0x08
0002e4  08080e00          DCB      0x08,0x08,0x0e,0x00
0002e8  00040a00          DCB      0x00,0x04,0x0a,0x00
0002ec  00000000          DCB      0x00,0x00,0x00,0x00
0002f0  00000000          DCB      0x00,0x00,0x00,0x00
0002f4  00000000          DCB      0x00,0x00,0x00,0x00
0002f8  00000000          DCB      0x00,0x00,0x00,0x00
0002fc  0000003f          DCB      0x00,0x00,0x00,0x3f
000300  00040000          DCB      0x00,0x04,0x00,0x00
000304  00000000          DCB      0x00,0x00,0x00,0x00
000308  00000000          DCB      0x00,0x00,0x00,0x00
00030c  00000000          DCB      0x00,0x00,0x00,0x00
000310  000c121c          DCB      0x00,0x0c,0x12,0x1c
000314  123c0000          DCB      0x12,0x3c,0x00,0x00
000318  00000302          DCB      0x00,0x00,0x03,0x02
00031c  020e1212          DCB      0x02,0x0e,0x12,0x12
000320  120e0000          DCB      0x12,0x0e,0x00,0x00
000324  00000000          DCB      0x00,0x00,0x00,0x00
000328  001c1202          DCB      0x00,0x1c,0x12,0x02
00032c  021c0000          DCB      0x02,0x1c,0x00,0x00
000330  00001810          DCB      0x00,0x00,0x18,0x10
000334  101c1212          DCB      0x10,0x1c,0x12,0x12
000338  123c0000          DCB      0x12,0x3c,0x00,0x00
00033c  00000000          DCB      0x00,0x00,0x00,0x00
000340  000c121e          DCB      0x00,0x0c,0x12,0x1e
000344  021c0000          DCB      0x02,0x1c,0x00,0x00
000348  00003804          DCB      0x00,0x00,0x38,0x04
00034c  041e0404          DCB      0x04,0x1e,0x04,0x04
000350  041e0000          DCB      0x04,0x1e,0x00,0x00
000354  00000000          DCB      0x00,0x00,0x00,0x00
000358  003c120c          DCB      0x00,0x3c,0x12,0x0c
00035c  021e221c          DCB      0x02,0x1e,0x22,0x1c
000360  00000302          DCB      0x00,0x00,0x03,0x02
000364  020e1212          DCB      0x02,0x0e,0x12,0x12
000368  12370000          DCB      0x12,0x37,0x00,0x00
00036c  00000400          DCB      0x00,0x00,0x04,0x00
000370  00060404          DCB      0x00,0x06,0x04,0x04
000374  040e0000          DCB      0x04,0x0e,0x00,0x00
000378  00000800          DCB      0x00,0x00,0x08,0x00
00037c  000c0808          DCB      0x00,0x0c,0x08,0x08
000380  08080807          DCB      0x08,0x08,0x08,0x07
000384  00000302          DCB      0x00,0x00,0x03,0x02
000388  023a0a0e          DCB      0x02,0x3a,0x0a,0x0e
00038c  12370000          DCB      0x12,0x37,0x00,0x00
000390  00000704          DCB      0x00,0x00,0x07,0x04
000394  04040404          DCB      0x04,0x04,0x04,0x04
000398  041f0000          DCB      0x04,0x1f,0x00,0x00
00039c  00000000          DCB      0x00,0x00,0x00,0x00
0003a0  000f1515          DCB      0x00,0x0f,0x15,0x15
0003a4  15150000          DCB      0x15,0x15,0x00,0x00
0003a8  00000000          DCB      0x00,0x00,0x00,0x00
0003ac  000f1212          DCB      0x00,0x0f,0x12,0x12
0003b0  12370000          DCB      0x12,0x37,0x00,0x00
0003b4  00000000          DCB      0x00,0x00,0x00,0x00
0003b8  000c1212          DCB      0x00,0x0c,0x12,0x12
0003bc  120c0000          DCB      0x12,0x0c,0x00,0x00
0003c0  00000000          DCB      0x00,0x00,0x00,0x00
0003c4  000f1212          DCB      0x00,0x0f,0x12,0x12
0003c8  120e0207          DCB      0x12,0x0e,0x02,0x07
0003cc  00000000          DCB      0x00,0x00,0x00,0x00
0003d0  001c1212          DCB      0x00,0x1c,0x12,0x12
0003d4  121c1038          DCB      0x12,0x1c,0x10,0x38
0003d8  00000000          DCB      0x00,0x00,0x00,0x00
0003dc  001b0602          DCB      0x00,0x1b,0x06,0x02
0003e0  02070000          DCB      0x02,0x07,0x00,0x00
0003e4  00000000          DCB      0x00,0x00,0x00,0x00
0003e8  001e020c          DCB      0x00,0x1e,0x02,0x0c
0003ec  101e0000          DCB      0x10,0x1e,0x00,0x00
0003f0  00000004          DCB      0x00,0x00,0x00,0x04
0003f4  040e0404          DCB      0x04,0x0e,0x04,0x04
0003f8  04180000          DCB      0x04,0x18,0x00,0x00
0003fc  00000000          DCB      0x00,0x00,0x00,0x00
000400  001b1212          DCB      0x00,0x1b,0x12,0x12
000404  123c0000          DCB      0x12,0x3c,0x00,0x00
000408  00000000          DCB      0x00,0x00,0x00,0x00
00040c  0037120a          DCB      0x00,0x37,0x12,0x0a
000410  0c040000          DCB      0x0c,0x04,0x00,0x00
000414  00000000          DCB      0x00,0x00,0x00,0x00
000418  0015150e          DCB      0x00,0x15,0x15,0x0e
00041c  0a0a0000          DCB      0x0a,0x0a,0x00,0x00
000420  00000000          DCB      0x00,0x00,0x00,0x00
000424  001b0a04          DCB      0x00,0x1b,0x0a,0x04
000428  0a1b0000          DCB      0x0a,0x1b,0x00,0x00
00042c  00000000          DCB      0x00,0x00,0x00,0x00
000430  0037120a          DCB      0x00,0x37,0x12,0x0a
000434  0c040403          DCB      0x0c,0x04,0x04,0x03
000438  00000000          DCB      0x00,0x00,0x00,0x00
00043c  001e0804          DCB      0x00,0x1e,0x08,0x04
000440  041e0000          DCB      0x04,0x1e,0x00,0x00
000444  00180808          DCB      0x00,0x18,0x08,0x08
000448  08040808          DCB      0x08,0x04,0x08,0x08
00044c  08081800          DCB      0x08,0x08,0x18,0x00
000450  08080808          DCB      0x08,0x08,0x08,0x08
000454  08080808          DCB      0x08,0x08,0x08,0x08
000458  08080808          DCB      0x08,0x08,0x08,0x08
00045c  00060404          DCB      0x00,0x06,0x04,0x04
000460  04080404          DCB      0x04,0x08,0x04,0x04
000464  04040600          DCB      0x04,0x04,0x06,0x00
000468  02251800          DCB      0x02,0x25,0x18,0x00
00046c  00000000          DCB      0x00,0x00,0x00,0x00
000470  00000000          DCB      0x00,0x00,0x00,0x00
                  asc2_1608
000474  00000000          DCB      0x00,0x00,0x00,0x00
000478  00000000          DCB      0x00,0x00,0x00,0x00
00047c  00000000          DCB      0x00,0x00,0x00,0x00
000480  00000000          DCB      0x00,0x00,0x00,0x00
000484  00000008          DCB      0x00,0x00,0x00,0x08
000488  08080808          DCB      0x08,0x08,0x08,0x08
00048c  08080000          DCB      0x08,0x08,0x00,0x00
000490  18180000          DCB      0x18,0x18,0x00,0x00
000494  00486c24          DCB      0x00,0x48,0x6c,0x24
000498  12000000          DCB      0x12,0x00,0x00,0x00
00049c  00000000          DCB      0x00,0x00,0x00,0x00
0004a0  00000000          DCB      0x00,0x00,0x00,0x00
0004a4  00000024          DCB      0x00,0x00,0x00,0x24
0004a8  24247f12          DCB      0x24,0x24,0x7f,0x12
0004ac  12127f12          DCB      0x12,0x12,0x7f,0x12
0004b0  12120000          DCB      0x12,0x12,0x00,0x00
0004b4  0000081c          DCB      0x00,0x00,0x08,0x1c
0004b8  2a2a0a0c          DCB      0x2a,0x2a,0x0a,0x0c
0004bc  1828282a          DCB      0x18,0x28,0x28,0x2a
0004c0  2a1c0808          DCB      0x2a,0x1c,0x08,0x08
0004c4  00000022          DCB      0x00,0x00,0x00,0x22
0004c8  25151515          DCB      0x25,0x15,0x15,0x15
0004cc  2a585454          DCB      0x2a,0x58,0x54,0x54
0004d0  54220000          DCB      0x54,0x22,0x00,0x00
0004d4  0000000c          DCB      0x00,0x00,0x00,0x0c
0004d8  1212120a          DCB      0x12,0x12,0x12,0x0a
0004dc  76252911          DCB      0x76,0x25,0x29,0x11
0004e0  916e0000          DCB      0x91,0x6e,0x00,0x00
0004e4  00060604          DCB      0x00,0x06,0x06,0x04
0004e8  03000000          DCB      0x03,0x00,0x00,0x00
0004ec  00000000          DCB      0x00,0x00,0x00,0x00
0004f0  00000000          DCB      0x00,0x00,0x00,0x00
0004f4  00402010          DCB      0x00,0x40,0x20,0x10
0004f8  10080808          DCB      0x10,0x08,0x08,0x08
0004fc  08080810          DCB      0x08,0x08,0x08,0x10
000500  10204000          DCB      0x10,0x20,0x40,0x00
000504  00020408          DCB      0x00,0x02,0x04,0x08
000508  08101010          DCB      0x08,0x10,0x10,0x10
00050c  10101008          DCB      0x10,0x10,0x10,0x08
000510  08040200          DCB      0x08,0x04,0x02,0x00
000514  00000000          DCB      0x00,0x00,0x00,0x00
000518  08086b1c          DCB      0x08,0x08,0x6b,0x1c
00051c  1c6b0808          DCB      0x1c,0x6b,0x08,0x08
000520  00000000          DCB      0x00,0x00,0x00,0x00
000524  00000000          DCB      0x00,0x00,0x00,0x00
000528  08080808          DCB      0x08,0x08,0x08,0x08
00052c  7f080808          DCB      0x7f,0x08,0x08,0x08
000530  08000000          DCB      0x08,0x00,0x00,0x00
000534  00000000          DCB      0x00,0x00,0x00,0x00
000538  00000000          DCB      0x00,0x00,0x00,0x00
00053c  00000000          DCB      0x00,0x00,0x00,0x00
000540  06060403          DCB      0x06,0x06,0x04,0x03
000544  00000000          DCB      0x00,0x00,0x00,0x00
000548  00000000          DCB      0x00,0x00,0x00,0x00
00054c  fe000000          DCB      0xfe,0x00,0x00,0x00
000550  00000000          DCB      0x00,0x00,0x00,0x00
000554  00000000          DCB      0x00,0x00,0x00,0x00
000558  00000000          DCB      0x00,0x00,0x00,0x00
00055c  00000000          DCB      0x00,0x00,0x00,0x00
000560  06060000          DCB      0x06,0x06,0x00,0x00
000564  00008040          DCB      0x00,0x00,0x80,0x40
000568  40202010          DCB      0x40,0x20,0x20,0x10
00056c  10080804          DCB      0x10,0x08,0x08,0x04
000570  04020200          DCB      0x04,0x02,0x02,0x00
000574  00000018          DCB      0x00,0x00,0x00,0x18
000578  24424242          DCB      0x24,0x42,0x42,0x42
00057c  42424242          DCB      0x42,0x42,0x42,0x42
000580  24180000          DCB      0x24,0x18,0x00,0x00
000584  00000008          DCB      0x00,0x00,0x00,0x08
000588  0e080808          DCB      0x0e,0x08,0x08,0x08
00058c  08080808          DCB      0x08,0x08,0x08,0x08
000590  083e0000          DCB      0x08,0x3e,0x00,0x00
000594  0000003c          DCB      0x00,0x00,0x00,0x3c
000598  42424220          DCB      0x42,0x42,0x42,0x20
00059c  20100804          DCB      0x20,0x10,0x08,0x04
0005a0  427e0000          DCB      0x42,0x7e,0x00,0x00
0005a4  0000003c          DCB      0x00,0x00,0x00,0x3c
0005a8  42422018          DCB      0x42,0x42,0x20,0x18
0005ac  20404042          DCB      0x20,0x40,0x40,0x42
0005b0  221c0000          DCB      0x22,0x1c,0x00,0x00
0005b4  00000020          DCB      0x00,0x00,0x00,0x20
0005b8  30282424          DCB      0x30,0x28,0x24,0x24
0005bc  22227e20          DCB      0x22,0x22,0x7e,0x20
0005c0  20780000          DCB      0x20,0x78,0x00,0x00
0005c4  0000007e          DCB      0x00,0x00,0x00,0x7e
0005c8  0202021a          DCB      0x02,0x02,0x02,0x1a
0005cc  26404042          DCB      0x26,0x40,0x40,0x42
0005d0  221c0000          DCB      0x22,0x1c,0x00,0x00
0005d4  00000038          DCB      0x00,0x00,0x00,0x38
0005d8  2402021a          DCB      0x24,0x02,0x02,0x1a
0005dc  26424242          DCB      0x26,0x42,0x42,0x42
0005e0  24180000          DCB      0x24,0x18,0x00,0x00
0005e4  0000007e          DCB      0x00,0x00,0x00,0x7e
0005e8  22221010          DCB      0x22,0x22,0x10,0x10
0005ec  08080808          DCB      0x08,0x08,0x08,0x08
0005f0  08080000          DCB      0x08,0x08,0x00,0x00
0005f4  0000003c          DCB      0x00,0x00,0x00,0x3c
0005f8  42424224          DCB      0x42,0x42,0x42,0x24
0005fc  18244242          DCB      0x18,0x24,0x42,0x42
000600  423c0000          DCB      0x42,0x3c,0x00,0x00
000604  00000018          DCB      0x00,0x00,0x00,0x18
000608  24424242          DCB      0x24,0x42,0x42,0x42
00060c  64584040          DCB      0x64,0x58,0x40,0x40
000610  241c0000          DCB      0x24,0x1c,0x00,0x00
000614  00000000          DCB      0x00,0x00,0x00,0x00
000618  00001818          DCB      0x00,0x00,0x18,0x18
00061c  00000000          DCB      0x00,0x00,0x00,0x00
000620  18180000          DCB      0x18,0x18,0x00,0x00
000624  00000000          DCB      0x00,0x00,0x00,0x00
000628  00000008          DCB      0x00,0x00,0x00,0x08
00062c  00000000          DCB      0x00,0x00,0x00,0x00
000630  00080804          DCB      0x00,0x08,0x08,0x04
000634  00000040          DCB      0x00,0x00,0x00,0x40
000638  20100804          DCB      0x20,0x10,0x08,0x04
00063c  02040810          DCB      0x02,0x04,0x08,0x10
000640  20400000          DCB      0x20,0x40,0x00,0x00
000644  00000000          DCB      0x00,0x00,0x00,0x00
000648  00007f00          DCB      0x00,0x00,0x7f,0x00
00064c  00007f00          DCB      0x00,0x00,0x7f,0x00
000650  00000000          DCB      0x00,0x00,0x00,0x00
000654  00000002          DCB      0x00,0x00,0x00,0x02
000658  04081020          DCB      0x04,0x08,0x10,0x20
00065c  40201008          DCB      0x40,0x20,0x10,0x08
000660  04020000          DCB      0x04,0x02,0x00,0x00
000664  0000003c          DCB      0x00,0x00,0x00,0x3c
000668  42424640          DCB      0x42,0x42,0x46,0x40
00066c  20101000          DCB      0x20,0x10,0x10,0x00
000670  18180000          DCB      0x18,0x18,0x00,0x00
000674  0000001c          DCB      0x00,0x00,0x00,0x1c
000678  225a5555          DCB      0x22,0x5a,0x55,0x55
00067c  55552d42          DCB      0x55,0x55,0x2d,0x42
000680  221c0000          DCB      0x22,0x1c,0x00,0x00
000684  00000008          DCB      0x00,0x00,0x00,0x08
000688  08181414          DCB      0x08,0x18,0x14,0x14
00068c  243c2242          DCB      0x24,0x3c,0x22,0x42
000690  42e70000          DCB      0x42,0xe7,0x00,0x00
000694  0000001f          DCB      0x00,0x00,0x00,0x1f
000698  2222221e          DCB      0x22,0x22,0x22,0x1e
00069c  22424242          DCB      0x22,0x42,0x42,0x42
0006a0  221f0000          DCB      0x22,0x1f,0x00,0x00
0006a4  0000007c          DCB      0x00,0x00,0x00,0x7c
0006a8  42420101          DCB      0x42,0x42,0x01,0x01
0006ac  01010142          DCB      0x01,0x01,0x01,0x42
0006b0  221c0000          DCB      0x22,0x1c,0x00,0x00
0006b4  0000001f          DCB      0x00,0x00,0x00,0x1f
0006b8  22424242          DCB      0x22,0x42,0x42,0x42
0006bc  42424242          DCB      0x42,0x42,0x42,0x42
0006c0  221f0000          DCB      0x22,0x1f,0x00,0x00
0006c4  0000003f          DCB      0x00,0x00,0x00,0x3f
0006c8  4212121e          DCB      0x42,0x12,0x12,0x1e
0006cc  12120242          DCB      0x12,0x12,0x02,0x42
0006d0  423f0000          DCB      0x42,0x3f,0x00,0x00
0006d4  0000003f          DCB      0x00,0x00,0x00,0x3f
0006d8  4212121e          DCB      0x42,0x12,0x12,0x1e
0006dc  12120202          DCB      0x12,0x12,0x02,0x02
0006e0  02070000          DCB      0x02,0x07,0x00,0x00
0006e4  0000003c          DCB      0x00,0x00,0x00,0x3c
0006e8  22220101          DCB      0x22,0x22,0x01,0x01
0006ec  01712122          DCB      0x01,0x71,0x21,0x22
0006f0  221c0000          DCB      0x22,0x1c,0x00,0x00
0006f4  000000e7          DCB      0x00,0x00,0x00,0xe7
0006f8  42424242          DCB      0x42,0x42,0x42,0x42
0006fc  7e424242          DCB      0x7e,0x42,0x42,0x42
000700  42e70000          DCB      0x42,0xe7,0x00,0x00
000704  0000003e          DCB      0x00,0x00,0x00,0x3e
000708  08080808          DCB      0x08,0x08,0x08,0x08
00070c  08080808          DCB      0x08,0x08,0x08,0x08
000710  083e0000          DCB      0x08,0x3e,0x00,0x00
000714  0000007c          DCB      0x00,0x00,0x00,0x7c
000718  10101010          DCB      0x10,0x10,0x10,0x10
00071c  10101010          DCB      0x10,0x10,0x10,0x10
000720  1010110f          DCB      0x10,0x10,0x11,0x0f
000724  00000077          DCB      0x00,0x00,0x00,0x77
000728  22120a0e          DCB      0x22,0x12,0x0a,0x0e
00072c  0a121222          DCB      0x0a,0x12,0x12,0x22
000730  22770000          DCB      0x22,0x77,0x00,0x00
000734  00000007          DCB      0x00,0x00,0x00,0x07
000738  02020202          DCB      0x02,0x02,0x02,0x02
00073c  02020202          DCB      0x02,0x02,0x02,0x02
000740  427f0000          DCB      0x42,0x7f,0x00,0x00
000744  00000077          DCB      0x00,0x00,0x00,0x77
000748  36363636          DCB      0x36,0x36,0x36,0x36
00074c  2a2a2a2a          DCB      0x2a,0x2a,0x2a,0x2a
000750  2a6b0000          DCB      0x2a,0x6b,0x00,0x00
000754  000000e3          DCB      0x00,0x00,0x00,0xe3
000758  46464a4a          DCB      0x46,0x46,0x4a,0x4a
00075c  52525262          DCB      0x52,0x52,0x52,0x62
000760  62470000          DCB      0x62,0x47,0x00,0x00
000764  0000001c          DCB      0x00,0x00,0x00,0x1c
000768  22414141          DCB      0x22,0x41,0x41,0x41
00076c  41414141          DCB      0x41,0x41,0x41,0x41
000770  221c0000          DCB      0x22,0x1c,0x00,0x00
000774  0000003f          DCB      0x00,0x00,0x00,0x3f
000778  42424242          DCB      0x42,0x42,0x42,0x42
00077c  3e020202          DCB      0x3e,0x02,0x02,0x02
000780  02070000          DCB      0x02,0x07,0x00,0x00
000784  0000001c          DCB      0x00,0x00,0x00,0x1c
000788  22414141          DCB      0x22,0x41,0x41,0x41
00078c  41414d53          DCB      0x41,0x41,0x4d,0x53
000790  321c6000          DCB      0x32,0x1c,0x60,0x00
000794  0000003f          DCB      0x00,0x00,0x00,0x3f
000798  4242423e          DCB      0x42,0x42,0x42,0x3e
00079c  12122222          DCB      0x12,0x12,0x22,0x22
0007a0  42c70000          DCB      0x42,0xc7,0x00,0x00
0007a4  0000007c          DCB      0x00,0x00,0x00,0x7c
0007a8  42420204          DCB      0x42,0x42,0x02,0x04
0007ac  18204042          DCB      0x18,0x20,0x40,0x42
0007b0  423e0000          DCB      0x42,0x3e,0x00,0x00
0007b4  0000007f          DCB      0x00,0x00,0x00,0x7f
0007b8  49080808          DCB      0x49,0x08,0x08,0x08
0007bc  08080808          DCB      0x08,0x08,0x08,0x08
0007c0  081c0000          DCB      0x08,0x1c,0x00,0x00
0007c4  000000e7          DCB      0x00,0x00,0x00,0xe7
0007c8  42424242          DCB      0x42,0x42,0x42,0x42
0007cc  42424242          DCB      0x42,0x42,0x42,0x42
0007d0  423c0000          DCB      0x42,0x3c,0x00,0x00
0007d4  000000e7          DCB      0x00,0x00,0x00,0xe7
0007d8  42422224          DCB      0x42,0x42,0x22,0x24
0007dc  24141418          DCB      0x24,0x14,0x14,0x18
0007e0  08080000          DCB      0x08,0x08,0x00,0x00
0007e4  0000006b          DCB      0x00,0x00,0x00,0x6b
0007e8  49494949          DCB      0x49,0x49,0x49,0x49
0007ec  55553622          DCB      0x55,0x55,0x36,0x22
0007f0  22220000          DCB      0x22,0x22,0x00,0x00
0007f4  000000e7          DCB      0x00,0x00,0x00,0xe7
0007f8  42242418          DCB      0x42,0x24,0x24,0x18
0007fc  18182424          DCB      0x18,0x18,0x24,0x24
000800  42e70000          DCB      0x42,0xe7,0x00,0x00
000804  00000077          DCB      0x00,0x00,0x00,0x77
000808  22221414          DCB      0x22,0x22,0x14,0x14
00080c  08080808          DCB      0x08,0x08,0x08,0x08
000810  081c0000          DCB      0x08,0x1c,0x00,0x00
000814  0000007e          DCB      0x00,0x00,0x00,0x7e
000818  21201010          DCB      0x21,0x20,0x10,0x10
00081c  08040442          DCB      0x08,0x04,0x04,0x42
000820  423f0000          DCB      0x42,0x3f,0x00,0x00
000824  00780808          DCB      0x00,0x78,0x08,0x08
000828  08080808          DCB      0x08,0x08,0x08,0x08
00082c  08080808          DCB      0x08,0x08,0x08,0x08
000830  08087800          DCB      0x08,0x08,0x78,0x00
000834  00000202          DCB      0x00,0x00,0x02,0x02
000838  04040808          DCB      0x04,0x04,0x08,0x08
00083c  08101020          DCB      0x08,0x10,0x10,0x20
000840  20204040          DCB      0x20,0x20,0x40,0x40
000844  001e1010          DCB      0x00,0x1e,0x10,0x10
000848  10101010          DCB      0x10,0x10,0x10,0x10
00084c  10101010          DCB      0x10,0x10,0x10,0x10
000850  10101e00          DCB      0x10,0x10,0x1e,0x00
000854  00384400          DCB      0x00,0x38,0x44,0x00
000858  00000000          DCB      0x00,0x00,0x00,0x00
00085c  00000000          DCB      0x00,0x00,0x00,0x00
000860  00000000          DCB      0x00,0x00,0x00,0x00
000864  00000000          DCB      0x00,0x00,0x00,0x00
000868  00000000          DCB      0x00,0x00,0x00,0x00
00086c  00000000          DCB      0x00,0x00,0x00,0x00
000870  000000ff          DCB      0x00,0x00,0x00,0xff
000874  00060800          DCB      0x00,0x06,0x08,0x00
000878  00000000          DCB      0x00,0x00,0x00,0x00
00087c  00000000          DCB      0x00,0x00,0x00,0x00
000880  00000000          DCB      0x00,0x00,0x00,0x00
000884  00000000          DCB      0x00,0x00,0x00,0x00
000888  0000003c          DCB      0x00,0x00,0x00,0x3c
00088c  42784442          DCB      0x42,0x78,0x44,0x42
000890  42fc0000          DCB      0x42,0xfc,0x00,0x00
000894  00000003          DCB      0x00,0x00,0x00,0x03
000898  0202021a          DCB      0x02,0x02,0x02,0x1a
00089c  26424242          DCB      0x26,0x42,0x42,0x42
0008a0  261a0000          DCB      0x26,0x1a,0x00,0x00
0008a4  00000000          DCB      0x00,0x00,0x00,0x00
0008a8  00000038          DCB      0x00,0x00,0x00,0x38
0008ac  44020202          DCB      0x44,0x02,0x02,0x02
0008b0  44380000          DCB      0x44,0x38,0x00,0x00
0008b4  00000060          DCB      0x00,0x00,0x00,0x60
0008b8  40404078          DCB      0x40,0x40,0x40,0x78
0008bc  44424242          DCB      0x44,0x42,0x42,0x42
0008c0  64d80000          DCB      0x64,0xd8,0x00,0x00
0008c4  00000000          DCB      0x00,0x00,0x00,0x00
0008c8  0000003c          DCB      0x00,0x00,0x00,0x3c
0008cc  427e0202          DCB      0x42,0x7e,0x02,0x02
0008d0  423c0000          DCB      0x42,0x3c,0x00,0x00
0008d4  000000f0          DCB      0x00,0x00,0x00,0xf0
0008d8  8808087e          DCB      0x88,0x08,0x08,0x7e
0008dc  08080808          DCB      0x08,0x08,0x08,0x08
0008e0  083e0000          DCB      0x08,0x3e,0x00,0x00
0008e4  00000000          DCB      0x00,0x00,0x00,0x00
0008e8  0000007c          DCB      0x00,0x00,0x00,0x7c
0008ec  22221c02          DCB      0x22,0x22,0x1c,0x02
0008f0  3c42423c          DCB      0x3c,0x42,0x42,0x3c
0008f4  00000003          DCB      0x00,0x00,0x00,0x03
0008f8  0202023a          DCB      0x02,0x02,0x02,0x3a
0008fc  46424242          DCB      0x46,0x42,0x42,0x42
000900  42e70000          DCB      0x42,0xe7,0x00,0x00
000904  0000000c          DCB      0x00,0x00,0x00,0x0c
000908  0c00000e          DCB      0x0c,0x00,0x00,0x0e
00090c  08080808          DCB      0x08,0x08,0x08,0x08
000910  083e0000          DCB      0x08,0x3e,0x00,0x00
000914  00000030          DCB      0x00,0x00,0x00,0x30
000918  30000038          DCB      0x30,0x00,0x00,0x38
00091c  20202020          DCB      0x20,0x20,0x20,0x20
000920  2020221e          DCB      0x20,0x20,0x22,0x1e
000924  00000003          DCB      0x00,0x00,0x00,0x03
000928  02020272          DCB      0x02,0x02,0x02,0x72
00092c  120a1612          DCB      0x12,0x0a,0x16,0x12
000930  22770000          DCB      0x22,0x77,0x00,0x00
000934  0000000e          DCB      0x00,0x00,0x00,0x0e
000938  08080808          DCB      0x08,0x08,0x08,0x08
00093c  08080808          DCB      0x08,0x08,0x08,0x08
000940  083e0000          DCB      0x08,0x3e,0x00,0x00
000944  00000000          DCB      0x00,0x00,0x00,0x00
000948  0000007f          DCB      0x00,0x00,0x00,0x7f
00094c  92929292          DCB      0x92,0x92,0x92,0x92
000950  92b70000          DCB      0x92,0xb7,0x00,0x00
000954  00000000          DCB      0x00,0x00,0x00,0x00
000958  0000003b          DCB      0x00,0x00,0x00,0x3b
00095c  46424242          DCB      0x46,0x42,0x42,0x42
000960  42e70000          DCB      0x42,0xe7,0x00,0x00
000964  00000000          DCB      0x00,0x00,0x00,0x00
000968  0000003c          DCB      0x00,0x00,0x00,0x3c
00096c  42424242          DCB      0x42,0x42,0x42,0x42
000970  423c0000          DCB      0x42,0x3c,0x00,0x00
000974  00000000          DCB      0x00,0x00,0x00,0x00
000978  0000001b          DCB      0x00,0x00,0x00,0x1b
00097c  26424242          DCB      0x26,0x42,0x42,0x42
000980  221e0207          DCB      0x22,0x1e,0x02,0x07
000984  00000000          DCB      0x00,0x00,0x00,0x00
000988  00000078          DCB      0x00,0x00,0x00,0x78
00098c  44424242          DCB      0x44,0x42,0x42,0x42
000990  447840e0          DCB      0x44,0x78,0x40,0xe0
000994  00000000          DCB      0x00,0x00,0x00,0x00
000998  00000077          DCB      0x00,0x00,0x00,0x77
00099c  4c040404          DCB      0x4c,0x04,0x04,0x04
0009a0  041f0000          DCB      0x04,0x1f,0x00,0x00
0009a4  00000000          DCB      0x00,0x00,0x00,0x00
0009a8  0000007c          DCB      0x00,0x00,0x00,0x7c
0009ac  42023c40          DCB      0x42,0x02,0x3c,0x40
0009b0  423e0000          DCB      0x42,0x3e,0x00,0x00
0009b4  00000000          DCB      0x00,0x00,0x00,0x00
0009b8  0008083e          DCB      0x00,0x08,0x08,0x3e
0009bc  08080808          DCB      0x08,0x08,0x08,0x08
0009c0  08300000          DCB      0x08,0x30,0x00,0x00
0009c4  00000000          DCB      0x00,0x00,0x00,0x00
0009c8  00000063          DCB      0x00,0x00,0x00,0x63
0009cc  42424242          DCB      0x42,0x42,0x42,0x42
0009d0  62dc0000          DCB      0x62,0xdc,0x00,0x00
0009d4  00000000          DCB      0x00,0x00,0x00,0x00
0009d8  000000e7          DCB      0x00,0x00,0x00,0xe7
0009dc  42242414          DCB      0x42,0x24,0x24,0x14
0009e0  08080000          DCB      0x08,0x08,0x00,0x00
0009e4  00000000          DCB      0x00,0x00,0x00,0x00
0009e8  000000eb          DCB      0x00,0x00,0x00,0xeb
0009ec  49495555          DCB      0x49,0x49,0x55,0x55
0009f0  22220000          DCB      0x22,0x22,0x00,0x00
0009f4  00000000          DCB      0x00,0x00,0x00,0x00
0009f8  00000076          DCB      0x00,0x00,0x00,0x76
0009fc  24181818          DCB      0x24,0x18,0x18,0x18
000a00  246e0000          DCB      0x24,0x6e,0x00,0x00
000a04  00000000          DCB      0x00,0x00,0x00,0x00
000a08  000000e7          DCB      0x00,0x00,0x00,0xe7
000a0c  42242414          DCB      0x42,0x24,0x24,0x14
000a10  18080807          DCB      0x18,0x08,0x08,0x07
000a14  00000000          DCB      0x00,0x00,0x00,0x00
000a18  0000007e          DCB      0x00,0x00,0x00,0x7e
000a1c  22100808          DCB      0x22,0x10,0x08,0x08
000a20  447e0000          DCB      0x44,0x7e,0x00,0x00
000a24  00c02020          DCB      0x00,0xc0,0x20,0x20
000a28  20202010          DCB      0x20,0x20,0x20,0x10
000a2c  20202020          DCB      0x20,0x20,0x20,0x20
000a30  2020c000          DCB      0x20,0x20,0xc0,0x00
000a34  10101010          DCB      0x10,0x10,0x10,0x10
000a38  10101010          DCB      0x10,0x10,0x10,0x10
000a3c  10101010          DCB      0x10,0x10,0x10,0x10
000a40  10101010          DCB      0x10,0x10,0x10,0x10
000a44  00060808          DCB      0x00,0x06,0x08,0x08
000a48  08080810          DCB      0x08,0x08,0x08,0x10
000a4c  08080808          DCB      0x08,0x08,0x08,0x08
000a50  08080600          DCB      0x08,0x08,0x06,0x00
000a54  0c32c200          DCB      0x0c,0x32,0xc2,0x00
000a58  00000000          DCB      0x00,0x00,0x00,0x00
000a5c  00000000          DCB      0x00,0x00,0x00,0x00
000a60  00000000          DCB      0x00,0x00,0x00,0x00

                          AREA ||.data||, DATA, ALIGN=1

                  POINT_COLOR
000000  0000              DCW      0x0000
                  BACK_COLOR
000002  ffff              DCW      0xffff
                  DeviceCode
000004  0000              DCB      0x00,0x00

                          AREA ||i.LCD_SetCursor||, COMGROUP=LCD_SetCursor, CODE, READONLY, ALIGN=2

                  LCD_SetCursor PROC
;;;258    //Ypos:纵坐标
;;;259    __inline void LCD_SetCursor(u16 Xpos, u16 Ypos)
000000  b530              PUSH     {r4,r5,lr}
;;;260    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;261    #ifdef USE_HORIZONTAL
;;;262    	if(DeviceCode==0X8989)
;;;263    	{
;;;264    		LCD_WriteReg(0X4E, Ypos);
;;;265    		LCD_WriteReg(0X4F, 319-Xpos);
;;;266        }else
;;;267    	{
;;;268    		LCD_WriteReg(R32, Ypos);
;;;269    		LCD_WriteReg(R33, 319-Xpos);
;;;270    	}							   
;;;271    #else
;;;272    	if(DeviceCode==0X8989)
000006  480c              LDR      r0,|L17.56|
000008  8800              LDRH     r0,[r0,#0]  ; DeviceCode
00000a  f5a04109          SUB      r1,r0,#0x8900
00000e  3989              SUBS     r1,r1,#0x89
000010  d108              BNE      |L17.36|
;;;273    	{
;;;274    		LCD_WriteReg(0X4E, Xpos);
000012  4621              MOV      r1,r4
000014  204e              MOVS     r0,#0x4e
000016  f7fffffe          BL       LCD_WriteReg
;;;275    		LCD_WriteReg(0X4F, Ypos);
00001a  4629              MOV      r1,r5
00001c  204f              MOVS     r0,#0x4f
00001e  f7fffffe          BL       LCD_WriteReg
000022  e007              B        |L17.52|
                  |L17.36|
;;;276        }else
;;;277    	{
;;;278    		LCD_WriteReg(R32, Xpos);  	 
000024  4621              MOV      r1,r4
000026  2020              MOVS     r0,#0x20
000028  f7fffffe          BL       LCD_WriteReg
;;;279    		LCD_WriteReg(R33, Ypos);
00002c  4629              MOV      r1,r5
00002e  2021              MOVS     r0,#0x21
000030  f7fffffe          BL       LCD_WriteReg
                  |L17.52|
;;;280    	}						    
;;;281    #endif
;;;282    }  
000034  bd30              POP      {r4,r5,pc}
;;;283    //画点
                          ENDP

000036  0000              DCW      0x0000
                  |L17.56|
                          DCD      DeviceCode
